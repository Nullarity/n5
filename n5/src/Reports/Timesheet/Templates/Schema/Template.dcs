<?xml version="1.0" encoding="UTF-8"?>
<DataCompositionSchema xmlns="http://v8.1c.ru/8.1/data-composition-system/schema" xmlns:dcscom="http://v8.1c.ru/8.1/data-composition-system/common" xmlns:dcscor="http://v8.1c.ru/8.1/data-composition-system/core" xmlns:dcsset="http://v8.1c.ru/8.1/data-composition-system/settings" xmlns:v8="http://v8.1c.ru/8.1/data/core" xmlns:v8ui="http://v8.1c.ru/8.1/data/ui" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<dataSource>
		<name>DataSource1</name>
		<dataSourceType>Local</dataSourceType>
	</dataSource>
	<dataSet xsi:type="DataSetQuery">
		<name>Time</name>
		<field xsi:type="DataSetFieldField">
			<dataPath>Employee</dataPath>
			<field>Employee</field>
			<role>
				<dcscom:dimension>true</dcscom:dimension>
			</role>
			<appearance>
				<dcscor:item xsi:type="dcsset:SettingsParameterValue">
					<dcscor:parameter>MaxWidth</dcscor:parameter>
					<dcscor:value xsi:type="xs:decimal">15</dcscor:value>
				</dcscor:item>
			</appearance>
			<inputParameters>
				<dcscor:item>
					<dcscor:parameter>ChoiceFoldersAndItems</dcscor:parameter>
					<dcscor:value xmlns:d6p1="http://v8.1c.ru/8.1/data/enterprise" xsi:type="d6p1:FoldersAndItemsUse">FoldersAndItems</dcscor:value>
				</dcscor:item>
			</inputParameters>
		</field>
		<field xsi:type="DataSetFieldField">
			<dataPath>Schedule</dataPath>
			<field>Schedule</field>
		</field>
		<field xsi:type="DataSetFieldField">
			<dataPath>Position</dataPath>
			<field>Position</field>
			<appearance>
				<dcscor:item xsi:type="dcsset:SettingsParameterValue">
					<dcscor:parameter>MaxWidth</dcscor:parameter>
					<dcscor:value xsi:type="xs:decimal">10</dcscor:value>
				</dcscor:item>
			</appearance>
		</field>
		<field xsi:type="DataSetFieldField">
			<dataPath>Department</dataPath>
			<field>Department</field>
			<appearance>
				<dcscor:item xsi:type="dcsset:SettingsParameterValue">
					<dcscor:parameter>MaxWidth</dcscor:parameter>
					<dcscor:value xsi:type="xs:decimal">10</dcscor:value>
				</dcscor:item>
			</appearance>
			<inputParameters>
				<dcscor:item>
					<dcscor:parameter>ChoiceParameterLinks</dcscor:parameter>
					<dcscor:value xsi:type="dcscor:ChoiceParameterLinks">
						<dcscor:item>
							<dcscor:choiceParameter>Filter.Owner</dcscor:choiceParameter>
							<dcscor:value>Company</dcscor:value>
							<dcscor:mode xmlns:d8p1="http://v8.1c.ru/8.1/data/enterprise" xsi:type="d8p1:LinkedValueChangeMode">Clear</dcscor:mode>
						</dcscor:item>
					</dcscor:value>
				</dcscor:item>
				<dcscor:item>
					<dcscor:parameter>ChoiceFoldersAndItems</dcscor:parameter>
					<dcscor:value xmlns:d6p1="http://v8.1c.ru/8.1/data/enterprise" xsi:type="d6p1:FoldersAndItemsUse">FoldersAndItems</dcscor:value>
				</dcscor:item>
			</inputParameters>
		</field>
		<field xsi:type="DataSetFieldField">
			<dataPath>Company</dataPath>
			<field>Company</field>
			<title xsi:type="v8:LocalStringType">
				<v8:item>
					<v8:lang>en</v8:lang>
					<v8:content>Company</v8:content>
				</v8:item>
				<v8:item>
					<v8:lang>ru</v8:lang>
					<v8:content>Компания</v8:content>
				</v8:item>
				<v8:item>
					<v8:lang>ro</v8:lang>
					<v8:content>Întreprinderea</v8:content>
				</v8:item>
			</title>
		</field>
		<field xsi:type="DataSetFieldField">
			<dataPath>Hours</dataPath>
			<field>Hours</field>
			<title xsi:type="v8:LocalStringType">
				<v8:item>
					<v8:lang>en</v8:lang>
					<v8:content>Hours</v8:content>
				</v8:item>
				<v8:item>
					<v8:lang>ru</v8:lang>
					<v8:content>Часы</v8:content>
				</v8:item>
				<v8:item>
					<v8:lang>ro</v8:lang>
					<v8:content>Ore</v8:content>
				</v8:item>
			</title>
			<appearance>
				<dcscor:item xsi:type="dcsset:SettingsParameterValue">
					<dcscor:parameter>Font</dcscor:parameter>
					<dcscor:value xmlns:sys="http://v8.1c.ru/8.1/data/ui/fonts/system" xsi:type="v8ui:Font" ref="sys:DefaultGUIFont" height="7" kind="WindowsFont"/>
				</dcscor:item>
				<dcscor:item xsi:type="dcsset:SettingsParameterValue">
					<dcscor:parameter>HorizontalAlign</dcscor:parameter>
					<dcscor:value xsi:type="v8ui:HorizontalAlign">Center</dcscor:value>
				</dcscor:item>
				<dcscor:item xsi:type="dcsset:SettingsParameterValue">
					<dcscor:parameter>MinWidth</dcscor:parameter>
					<dcscor:value xsi:type="xs:decimal">2.8</dcscor:value>
				</dcscor:item>
				<dcscor:item xsi:type="dcsset:SettingsParameterValue">
					<dcscor:parameter>MaxWidth</dcscor:parameter>
					<dcscor:value xsi:type="xs:decimal">2.8</dcscor:value>
				</dcscor:item>
			</appearance>
		</field>
		<field xsi:type="DataSetFieldField">
			<dataPath>Day</dataPath>
			<field>Day</field>
		</field>
		<field xsi:type="DataSetFieldField">
			<dataPath>Days</dataPath>
			<field>Days</field>
			<title xsi:type="v8:LocalStringType">
				<v8:item>
					<v8:lang>en</v8:lang>
					<v8:content>Days</v8:content>
				</v8:item>
				<v8:item>
					<v8:lang>ru</v8:lang>
					<v8:content>Дни</v8:content>
				</v8:item>
				<v8:item>
					<v8:lang>ro</v8:lang>
					<v8:content>Zile</v8:content>
				</v8:item>
			</title>
		</field>
		<field xsi:type="DataSetFieldField">
			<dataPath>Time</dataPath>
			<field>Time</field>
			<title xsi:type="v8:LocalStringType">
				<v8:item>
					<v8:lang>en</v8:lang>
					<v8:content>Time</v8:content>
				</v8:item>
				<v8:item>
					<v8:lang>ru</v8:lang>
					<v8:content>Время</v8:content>
				</v8:item>
				<v8:item>
					<v8:lang>ro</v8:lang>
					<v8:content>Timp</v8:content>
				</v8:item>
			</title>
			<role>
				<dcscom:dimension>true</dcscom:dimension>
			</role>
			<presentationExpression>case when Time = value ( Enum.Time.Billable ) then &amp;Billable when Time = value ( Enum.Time.Evening ) then &amp;Evening when Time = value ( Enum.Time.Night ) then &amp;Night when Time = value ( Enum.Time.Holiday ) then &amp;Holiday when Time = value ( Enum.Time.Vacation )  then &amp;Vacation when Time = value ( Enum.Time.ExtendedVacation ) then &amp;ExtendedVacation when Time = value ( Enum.Time.Sickness ) then &amp;Sickness when Time = value ( Enum.Time.Overtime ) then &amp;Overtime when Time = value ( Enum.Time.DayOff ) then &amp;DayOff when Time = value ( Enum.Time.Absence ) then &amp;Absence when Time = value ( Enum.Time.Banked ) then &amp;Banked else &amp;BankedUse end</presentationExpression>
			<orderExpression>
				<dcscom:expression>case when Time = value ( Enum.Time.Billable ) then 0 when Time = value ( Enum.Time.Evening ) then 1 when Time = value ( Enum.Time.Night ) then 2 when Time = value ( Enum.Time.Holiday ) then 3 when Time = value ( Enum.Time.Vacation )  then 4 when Time = value ( Enum.Time.ExtendedVacation ) then 5 when Time = value ( Enum.Time.Sickness ) then 6 when Time = value ( Enum.Time.Overtime ) then 7 when Time = value ( Enum.Time.DayOff ) then 8 when Time = value ( Enum.Time.Absence ) then 9 when Time = value ( Enum.Time.Banked ) then 10 else 11 end</dcscom:expression>
				<dcscom:orderType>Asc</dcscom:orderType>
				<dcscom:autoOrder>false</dcscom:autoOrder>
			</orderExpression>
			<appearance>
				<dcscor:item xsi:type="dcsset:SettingsParameterValue">
					<dcscor:parameter>MaxWidth</dcscor:parameter>
					<dcscor:value xsi:type="xs:decimal">4</dcscor:value>
				</dcscor:item>
			</appearance>
		</field>
		<field xsi:type="DataSetFieldField">
			<dataPath>Span</dataPath>
			<field>Span</field>
			<title xsi:type="v8:LocalStringType">
				<v8:item>
					<v8:lang>en</v8:lang>
					<v8:content>Span</v8:content>
				</v8:item>
				<v8:item>
					<v8:lang>ru</v8:lang>
					<v8:content>Отрезок</v8:content>
				</v8:item>
				<v8:item>
					<v8:lang>ro</v8:lang>
					<v8:content>Segment</v8:content>
				</v8:item>
			</title>
			<useRestriction>
				<field>true</field>
			</useRestriction>
			<role>
				<dcscom:dimension>true</dcscom:dimension>
			</role>
		</field>
		<field xsi:type="DataSetFieldField">
			<dataPath>WholeDay</dataPath>
			<field>WholeDay</field>
			<title xsi:type="v8:LocalStringType">
				<v8:item>
					<v8:lang>en</v8:lang>
					<v8:content>Whole day</v8:content>
				</v8:item>
			</title>
		</field>
		<dataSource>DataSource1</dataSource>
		<query>// Timeline for next 3 years
select dateadd ( &amp;DateStart, day, 11 * 11 * ( Rate1.Factor - 1 ) + 11 * ( Rate2.Factor - 1 ) + ( Rate3.Factor - 1 ) ) as Day
into Time
from (
	select 1 as Factor union all select 2 union all select 3 union all select 4 union all select 5 union all select 6
	union all select 7 union all select 8 union all select 9 union all select 10 union all select 11
	) as Rate1,
	(
	select 1 as Factor union all select 2 union all select 3 union all select 4 union all select 5 union all select 6
	union all select 7 union all select 8 union all select 9 union all select 10 union all select 11
	) as Rate2,
	(
	select 1 as Factor union all select 2 union all select 3 union all select 4 union all select 5 union all select 6
	union all select 7 union all select 8 union all select 9 union all select 10 union all select 11
	) as Rate3
where 11 * 11 * ( Rate1.Factor - 1 ) + 11 * ( Rate2.Factor - 1 ) + ( Rate3.Factor - 1 ) &lt; 366 * 3
index by Day
;
// Periods for next 3 years
select dateadd ( &amp;DateStart, month, 4 * 4 * ( Rate1.Factor - 1 ) + 4 * ( Rate2.Factor - 1 ) + ( Rate3.Factor - 1 ) ) as DateStart,
	endofperiod ( dateadd ( &amp;DateStart, month, 4 * 4 * ( Rate1.Factor - 1 ) + 4 * ( Rate2.Factor - 1 ) + ( Rate3.Factor - 1 ) ), month ) as DateEnd
into Spans
from (
	select 1 as Factor union all select 2 union all select 3 union all select 4
	) as Rate1,
	(
	select 1 as Factor union all select 2 union all select 3 union all select 4
	) as Rate2,
	(
	select 1 as Factor union all select 2 union all select 3 union all select 4
	) as Rate3
where 4 * 4 * ( Rate1.Factor - 1 ) + 4 * ( Rate2.Factor - 1 ) + ( Rate3.Factor - 1 ) &lt; 12 * 3
;
// Calendar
select Time.Day as Day
into Calendar
from Time as Time
where Time.Day between &amp;DateStart and dateadd ( &amp;DateEnd, day, -1 )
union all
select beginofperiod ( &amp;DateEnd, day )
index by Day
;
// Employees
select Employees.Employee as Employee, &amp;DateStart as Period, Employees.Hired as Hired
into Employees
from InformationRegister.Employees.SliceLast ( &amp;DateStart,
	{Employee.* as Employee, Employee.Company.* as Company} ) as Employees
where Employees.Hired
union
select Employees.Employee, Employees.Period, Employees.Hired
from InformationRegister.Employees as Employees
where Employees.Period &gt; &amp;DateStart and Employees.Period &lt;= &amp;DateEnd
{where Employees.Employee.* as Employee, Employees.Employee.Company.* as Company}
index by Employee
;
// Employment
select Employees.Employee as Employee, Employees.Period as DateStart,
	isnull ( Terminated.Period, &amp;DateEnd ) as DateEnd
into Employment
from Employees as Employees
	//
	// Terminated
	//
	left join Employees as Terminated
	on Terminated.Employee = Employees.Employee
	and Terminated.Period &gt; Employees.Period
	and not Terminated.Hired
where Employees.Hired
;
// Personnel
select &amp;DateStart as Period, Personnel.Employee as Employee, Personnel.Department as Department,
	Personnel.Position as Position, Personnel.Schedule as Schedule, Personnel.Expenses as Expenses
into Personnel
from InformationRegister.Personnel.SliceLast ( &amp;DateStart, Employee in ( select distinct Employee from Employees ) ) as Personnel
{where Department.* as Department, Position.* as Position, Schedule.* as Schedule}
union
select Personnel.Period, Personnel.Employee, Personnel.Department, Personnel.Position, Personnel.Schedule, Personnel.Expenses
from InformationRegister.Personnel as Personnel
where Personnel.Period &gt; &amp;DateStart and Personnel.Period &lt;= &amp;DateEnd
and Personnel.Employee in ( select distinct Employee from Employees )
{where Department.* as Department, Position.* as Position, Schedule.* as Schedule}
;
// Changes
select Personnel.Employee as Employee, Personnel.Period as DateStart,
	min ( isnull ( dateadd ( Changes.Period, second, -1 ), Employment.DateEnd ) ) as DateEnd
into Changes
from Personnel as Personnel
	//
	// Employment
	//
	join Employment as Employment
	on Employment.Employee = Personnel.Employee
	and Personnel.Period between Employment.DateStart and Employment.DateEnd
	//
	// Changes
	//
	left join Personnel as Changes
	on Changes.Period &gt; Personnel.Period
	and Changes.Period &lt; Employment.DateEnd
	and Changes.Employee = Personnel.Employee
	and ( Personnel.Department &lt;&gt; Changes.Department
		or Personnel.Position &lt;&gt; Changes.Position
		or Personnel.Schedule &lt;&gt; Changes.Schedule
		or Personnel.Expenses &lt;&gt; Changes.Expenses )
group by Personnel.Employee, Personnel.Period
;
// Rates
select Rates.Employee as Employee, Rates.Compensation as Compensation, Rates.Actual as Actual,
	&amp;DateStart as Period
into Rates
from InformationRegister.EmployeeRates.SliceLast ( &amp;DateStart, Employee in ( select distinct Employee from Employees )
	and Compensation.Method in ( value ( Enum.Calculations.HourlyRate ), value ( Enum.Calculations.MonthlyRate ) ) ) as Rates
where Rates.Actual
union
select Rates.Employee, Rates.Compensation, Rates.Actual, Rates.Period
from InformationRegister.EmployeeRates as Rates
where Rates.Period &gt; &amp;DateStart and Rates.Period &lt;= &amp;DateEnd
and Rates.Employee in ( select distinct Employee from Employees )
and Rates.Compensation.Method in ( value ( Enum.Calculations.HourlyRate ), value ( Enum.Calculations.MonthlyRate ) )
;
// CompensationPeriods
select Rates.Employee as Employee, Rates.Compensation as Compensation, Rates.Period as DateStart,
	min ( isnull ( Changes.Period, Employment.DateEnd ) ) as DateEnd
into CompensationPeriods
from Rates as Rates
	//
	// Filter by Employment
	//
	join Employment as Employment
	on Employment.Employee = Rates.Employee
	and Rates.Period between Employment.DateStart and Employment.DateEnd
	//
	// Changes
	//
	left join Rates as Changes
	on Changes.Employee = Rates.Employee
	and Changes.Compensation = Rates.Compensation
	and Changes.Period &gt; Rates.Period
	and Changes.Period &lt; Employment.DateEnd
where Rates.Actual
group by Rates.Employee, Rates.Compensation, Rates.Period
index by Employee
;
select Compensations.Employee as Employee, Compensations.Compensation as Compensation,
	AllPeriods.DateStart as DateStart, AllPeriods.DateEnd as DateEnd
into Compensations
from CompensationPeriods as Compensations
	//
	// AllPeriods
	//
	join (
		select Rates.Employee as Employee, Rates.Period as DateStart,
			isnull ( min ( dateadd ( Changes.Period, day, -1 ) ), min ( Employment.DateEnd ) ) as DateEnd
		from Rates as Rates
			//
			// Filter by Employment
			//
			join Employment as Employment
			on Employment.Employee = Rates.Employee
			and Rates.Period between Employment.DateStart and Employment.DateEnd
			//
			// Changes
			//
			left join Rates as Changes
			on Changes.Employee = Rates.Employee
			and Changes.Period &gt; Rates.Period
			and Changes.Period &lt; Employment.DateEnd
		group by Rates.Employee, Rates.Period
	) as AllPeriods
	on AllPeriods.Employee = Compensations.Employee
	and AllPeriods.DateStart &gt;= Compensations.DateStart
	and AllPeriods.DateEnd &lt;= Compensations.DateEnd
index by Employee
;
// Location
select Personnel.Employee as Employee, Personnel.Department as Department, Personnel.Position as Position,
	Personnel.Schedule as Schedule, Personnel.Expenses as Expenses,
	Changes.DateStart as DateStart, dateadd ( Changes.DateEnd, second, -1 ) as DateEnd
into ScheduledLocation
from Personnel as Personnel
	//
	// Changed
	//
	join Changes as Changes
	on Changes.Employee = Personnel.Employee
	and Personnel.Period &gt;= Changes.DateStart 
	and Personnel.Period &lt; Changes.DateEnd
	//
	// Filter by Employment
	//
	join Employment as Employment
	on Employment.Employee = Changes.Employee
	and Changes.DateStart between Employment.DateStart and Employment.DateEnd
	and Changes.DateEnd between Employment.DateStart and Employment.DateEnd
;
// LocationByDays
select Calendar.Day as Day, Location.Employee as Employee, Location.Department as Department,
	Location.Position as Position, Location.Schedule as Schedule, Location.Expenses as Expenses,
	case
		when Vacations.Employee is not null then true
		when SickLeaves.Employee is not null then true
		when Absences.Minutes = Schedules.Minutes then true
		else false
	end as Absence
into LocationByDays
from Calendar as Calendar
	//
	// Location
	//
	join ScheduledLocation as Location
	on Calendar.Day between Location.DateStart and Location.DateEnd
	//
	// Schedule
	//
	left join InformationRegister.Schedules as Schedules
	on Schedules.Schedule = Location.Schedule
	and Schedules.Day = Calendar.Day
	and Schedules.Minutes &gt; 0
	//
	// Vacations
	//
	left join Document.Vacation.Employees as Vacations
	on Vacations.Employee = Location.Employee
	and Calendar.Day between Vacations.DateStart and Vacations.DateEnd
	and Vacations.Ref.Posted
	//
	// SickLeaves
	//
	left join Document.SickLeave as SickLeaves
	on SickLeaves.Employee = Location.Employee
	and Calendar.Day between SickLeaves.DateStart and SickLeaves.DateEnd
	and SickLeaves.Posted
	//
	// Absences
	//
	left join InformationRegister.Hours as Absences
	on Absences.Employee = Location.Employee
	and Absences.Day = Calendar.Day
	and Absences.Time in (
		value ( Enum.Time.Absence ),
		value ( Enum.Time.Vacation ),
		value ( Enum.Time.ExtendedVacation ),
		value ( Enum.Time.Sickness )
	)
;
// LocationGaps
select Location.Employee as Employee, Location.Department as Department,
	Location.Position as Position, Location.Schedule as Schedule, Location.Expenses as Expenses,
	Location.Day as DateStart, min  ( NextPeriods.Day ) as DateEnd
into LocationGaps
from LocationByDays as Location
	//
	// NextPeriods
	//
	left join LocationByDays as NextPeriods
	on NextPeriods.Day &gt; Location.Day
	and NextPeriods.Employee = Location.Employee
	and NextPeriods.Department = Location.Department
	and NextPeriods.Position = Location.Position
	and NextPeriods.Schedule = Location.Schedule
	and NextPeriods.Expenses = Location.Expenses
	and not NextPeriods.Absence
where not Location.Absence
group by Location.Day, Location.Employee, Location.Department, Location.Position, Location.Schedule, Location.Expenses
having datediff ( Location.Day, min ( NextPeriods.Day ), day ) &gt; 1
;
// Location
select Bottom.Day as DateStart, min ( isnull ( Gaps.DateStart, Bottom.LastWorkDay ) ) as DateEnd,
	Bottom.Employee as Employee, Bottom.Department as Department, Bottom.Position as Position,
	Bottom.Schedule as Schedule, Bottom.Expenses as Expenses
into Location
from (
	select min ( Location.Day ) as Day, max ( Location.Day ) as LastWorkDay,
		Location.Employee as Employee, Location.Department as Department,
		Location.Position as Position, Location.Schedule as Schedule, Location.Expenses as Expenses
	from LocationByDays as Location
	where not Location.Absence
	group by Location.Employee, Location.Department, Location.Position, Location.Schedule, Location.Expenses
	) as Bottom
	//
	// Gaps
	//
	left join LocationGaps as Gaps
	on Gaps.DateStart &gt;= Bottom.Day
	and Gaps.Employee = Bottom.Employee
	and Gaps.Department = Bottom.Department
	and Gaps.Position = Bottom.Position
	and Gaps.Schedule = Bottom.Schedule
	and Gaps.Expenses = Bottom.Expenses
group by Bottom.Day, Bottom.Employee, Bottom.Department, Bottom.Position, Bottom.Schedule, Bottom.Expenses
union
select Up.Day, max ( Location.Day ), Up.Employee, Up.Department, Up.Position, Up.Schedule, Up.Expenses
from (
	select max ( Gaps.DateEnd ) as Day, Gaps.Employee as Employee, Gaps.Department as Department,
		Gaps.Position as Position, Gaps.Schedule as Schedule, Gaps.Expenses as Expenses
	from LocationGaps as Gaps
	group by Gaps.Employee, Gaps.Department, Gaps.Position, Gaps.Schedule, Gaps.Expenses
	) as Up
	//
	// Location
	//
	join LocationByDays as Location
	on Location.Day &gt;= Up.Day
	and Location.Employee = Up.Employee
	and Location.Department = Up.Department
	and Location.Position = Up.Position
	and Location.Schedule = Up.Schedule
	and Location.Expenses = Up.Expenses
	and not Location.Absence
group by Up.Day, Up.Employee, Up.Department, Up.Position, Up.Schedule, Up.Expenses
union
select Previous.DateEnd, Next.DateStart,
	Previous.Employee, Previous.Department, Previous.Position, Previous.Schedule, Previous.Expenses
from LocationGaps as Previous
	//
	// Next
	//
	join LocationGaps as Next
	on Next.DateStart &gt; Previous.DateEnd
	and Next.Employee = Previous.Employee
	and Next.Department = Previous.Department
	and Next.Position = Previous.Position
	and Next.Schedule = Previous.Schedule
	and Next.Expenses = Previous.Expenses
index by Employee
;
// Intervals
select distinct Intervals.Employee as Employee, Intervals.Schedule as Schedule,
	Intervals.DateStart as DateStart, Intervals.DateEnd as DateEnd
into Intervals
from Location as Intervals
index by Employee, Schedule
;
// ScheduledIntervals
select distinct Intervals.Employee as Employee, Intervals.Schedule as Schedule,
	Intervals.DateStart as DateStart, Intervals.DateEnd as DateEnd,
	Intervals.Department.Division as Division
into ScheduledIntervals
from ScheduledLocation as Intervals
index by Employee, Schedule
;
// HolidaysRawData
select HolidaysList.Reference as Reference, HolidaysList.Day as Day,
    case when PreholidaysInHolidays.Day is null and Preholidays.Minutes &gt; 0 then Preholidays.Day end as Preholiday,
	HolidaysList.Division as Division, Schedules.Schedule as Schedule
into HolidaysRawData
from InformationRegister.Holidays as HolidaysList
	//
	// Schedules
	//
	join InformationRegister.Schedules as Schedules
	on Schedules.Day = HolidaysList.Day
	and Schedules.Schedule.Holidays = HolidaysList.Reference
	//
	// Preholidays
	//
	left join InformationRegister.Schedules as Preholidays
	on Preholidays.Day = dateadd ( HolidaysList.Day, day, -1 )
	and Preholidays.Schedule.Holidays = HolidaysList.Reference
	and Preholidays.Schedule = Schedules.Schedule
	and Preholidays.Schedule.Preholidays
    //
    // PreholidaysInHolidays
    //
    left join InformationRegister.Holidays as PreholidaysInHolidays
    on PreholidaysInHolidays.Day = Preholidays.Day
	and PreholidaysInHolidays.Reference = Preholidays.Schedule.Holidays
where HolidaysList.Day between &amp;DateStart and dateadd ( &amp;DateEnd, day, 1 )
;
// All holidays
select Divisions.Ref as Division, Holidays.Reference as Reference, Holidays.Day as Day, Holidays.Preholiday as Preholiday,
	Holidays.Schedule as Schedule
into AllHolidays
from (
	select value ( Catalog.Divisions.EmptyRef ) as Ref
	union all
	select Divisions.Ref
	from Catalog.Divisions as Divisions
	where not Divisions.DeletionMark
) as Divisions
	//
	// CommonHolidays
	//
	join HolidaysRawData as Holidays
	on Holidays.Division = value ( Catalog.Divisions.EmptyRef )
union all
select LocalHolidays.Division, LocalHolidays.Reference, LocalHolidays.Day, LocalHolidays.Preholiday, LocalHolidays.Schedule
from HolidaysRawData as LocalHolidays
where LocalHolidays.Division &lt;&gt; value ( Catalog.Divisions.EmptyRef )
;
// Only holidays falling on working days
select Holidays.Day as Day,
	case when Holidays.Preholiday &lt; &amp;DateStart then null else Holidays.Preholiday end as Preholiday,
	Holidays.Division as Division, Holidays.Schedule as Schedule
into Holidays
from AllHolidays as Holidays
where Holidays.Day between &amp;DateStart and dateadd ( &amp;DateEnd, day, 1 )
;
// Deviations
select Hours.Employee as Employee, Hours.Time as Time, Hours.Day as Day, sum ( Hours.Minutes ) as Minutes
into Deviations
from InformationRegister.Hours as Hours
	//
	// Filter by Employment
	//
	join Employment as Employment
	on Employment.Employee = Hours.Employee
	and Hours.Day between Employment.DateStart and Employment.DateEnd
where Hours.Time in (
	value ( Enum.Time.Banked ),
	value ( Enum.Time.BankedUse ),
	value ( Enum.Time.Overtime ),
	value ( Enum.Time.Absence ),
	value ( Enum.Time.Holiday ),
	value ( Enum.Time.DayOff ) )
group by Hours.Employee, Hours.Time, Hours.Day
index by Employee, Day
;
// NoTimesheets
select distinct Employees.Employee as Employee
into NoTimesheets
from Employees as Employees
	//
	// Timesheet
	//
	left join Document.Timesheet as Timesheet
	on Timesheet.Date between &amp;DateStart and &amp;DateEnd
	and Timesheet.Employee = Employees.Employee
	and not Timesheet.DeletionMark
	//
	// Allowed only
	//
	join Constants as Constants
	on not Constants.Timesheets
where Timesheet.Ref is null
;
// Vacations
select Vacations.Ref as Ref, Vacations.Employee as Employee, Time.Day as Day,
	case Vacations.Compensation.Method
		when value ( Enum.Calculations.Vacation ) then value ( Enum.Time.Vacation ) 
		else value ( Enum.Time.ExtendedVacation )
	end as Time,
	Schedules.Minutes as Minutes, Schedules.Minutes as ScheduledMinutes, HolidaysList.Day as Holiday,
	Spans.DateStart as SpanStart, Spans.DateEnd as SpanEnd, true as WholeDay
into Vacations
from Document.Vacation.Employees as Vacations
	//
	// Time
	//
	join Time as Time
	on Time.Day between Vacations.DateStart and Vacations.DateEnd
	//
	// ScheduledIntervals
	//
	join ScheduledIntervals as Intervals
	on Intervals.Employee = Vacations.Employee
	and Time.Day between Intervals.DateStart and Intervals.DateEnd
	//
	// Schedules
	//
	join InformationRegister.Schedules as Schedules
	on Schedules.Schedule = Intervals.Schedule
	and Schedules.Day = Time.Day
	//
	// Holidays
	//
	left join AllHolidays as HolidaysList
	on HolidaysList.Reference = Schedules.Schedule.Holidays
	and HolidaysList.Division = Intervals.Division
	and HolidaysList.Day = Schedules.Day
	and Schedules.Minutes &gt; 0
	//
	// Spans
	//
	join Spans as Spans
	on Time.Day between Spans.DateStart and Spans.DateEnd
where Vacations.Ref.Posted
union all
select Hours.Recorder, Hours.Employee, Hours.Day, Hours.Time, Hours.Minutes, Schedules.Minutes,
	null, Spans.DateStart, Spans.DateEnd, ( Schedules.Minutes = Hours.Minutes ) or ( Schedules.Minutes = 0 )
from InformationRegister.Hours as Hours
	//
	// Exclude already created Vacation documents
	//
	left join Document.Vacation.Employees as Vacations
	on Vacations.Employee = Hours.Employee
	and Hours.Day between Vacations.DateStart and Vacations.DateEnd
	and Vacations.Ref.Posted
	//
	// ScheduledIntervals
	//
	join ScheduledIntervals as Intervals
	on Intervals.Employee = Hours.Employee
	and Hours.Day between Intervals.DateStart and Intervals.DateEnd
	//
	// Schedules
	//
	join InformationRegister.Schedules as Schedules
	on Schedules.Schedule = Intervals.Schedule
	and Schedules.Day = Hours.Day
	//
	// Spans
	//
	join Spans as Spans
	on Hours.Day between Spans.DateStart and Spans.DateEnd
where Hours.Day between &amp;DateStart and &amp;DateEnd
and Hours.Time in ( value ( Enum.Time.Vacation ), value ( Enum.Time.ExtendedVacation ) )
and Vacations.Ref is null
index by Employee, Day
;
// SickLeaves
select SickLeaves.Employee as Employee, Calendar.Day as Day, value ( Enum.Time.Sickness ) as Time,
	Schedules.Minutes as Minutes, true as WholeDay
into SickLeaves
from Document.SickLeave as SickLeaves
	//
	// Calendar
	//
	join Calendar as Calendar
	on Calendar.Day between SickLeaves.DateStart and SickLeaves.DateEnd
	//
	// Intervals
	//
	join ScheduledIntervals as Intervals
	on Intervals.Employee = SickLeaves.Employee
	and Calendar.Day between Intervals.DateStart and Intervals.DateEnd
	//
	// Schedules
	//
	join InformationRegister.Schedules as Schedules
	on Schedules.Schedule = Intervals.Schedule
	and Schedules.Day = Calendar.Day
where SickLeaves.Posted
union all
select Hours.Employee, Hours.Day, Hours.Time, Hours.Minutes, ( Schedules.Minutes = Hours.Minutes ) or ( Schedules.Minutes = 0 )
from InformationRegister.Hours as Hours
	//
	// Exclude already created SickVacation documents
	//
	left join Document.SickLeave as SickLeaves
	on SickLeaves.Employee = Hours.Employee
	and Hours.Day between SickLeaves.DateStart and SickLeaves.DateEnd
	and SickLeaves.Ref.Posted
	//
	// ScheduledIntervals
	//
	join ScheduledIntervals as Intervals
	on Intervals.Employee = Hours.Employee
	and Hours.Day between Intervals.DateStart and Intervals.DateEnd
	//
	// Schedules
	//
	join InformationRegister.Schedules as Schedules
	on Schedules.Schedule = Intervals.Schedule
	and Schedules.Day = Hours.Day
where Hours.Day between &amp;DateStart and &amp;DateEnd
and Hours.Time = value ( Enum.Time.Sickness )
and SickLeaves.Ref is null
index by Employee, Day
;
// SimpleHours
select Location.Employee as Employee, Calendar.Day as Day,
	sum ( case
		when HolidaysList.Day is not null then 0
		when Vacations.Day is not null then 0
		when SickLeaves.Day is not null then 0
		when Schedules.Minutes - case when Preholidays.Day is null then 0 else 60 end - isnull ( Absences.Minutes, 0 ) + isnull ( UsedBankHours.Minutes, 0 ) &lt; 0 then
			0
		else
			Schedules.Minutes
			- case when Preholidays.Day is null then 0 else 60 end
			- isnull ( Absences.Minutes, 0 )
			+ isnull ( UsedBankHours.Minutes, 0 )
	end ) / 60 as Hours,		
	sum ( case
		when HolidaysList.Day is not null then 0
		when Vacations.Day is not null then 0
		when SickLeaves.Day is not null then 0
		when Schedules.MinutesEvening + ( Schedules.Minutes - Schedules.MinutesEvening - Schedules.MinutesNight - case when Preholidays.Day is null then 0 else 60 end - isnull ( Absences.Minutes, 0 ) + isnull ( UsedBankHours.Minutes, 0 ) ) &lt; 0 then
			0
		when Schedules.MinutesEvening + ( Schedules.Minutes - Schedules.MinutesEvening - Schedules.MinutesNight - case when Preholidays.Day is null then 0 else 60 end - isnull ( Absences.Minutes, 0 ) + isnull ( UsedBankHours.Minutes, 0 ) ) &gt; Schedules.MinutesEvening then
			Schedules.MinutesEvening
		else
			Schedules.MinutesEvening + ( Schedules.Minutes - Schedules.MinutesEvening - Schedules.MinutesNight - case when Preholidays.Day is null then 0 else 60 end - isnull ( Absences.Minutes, 0 ) + isnull ( UsedBankHours.Minutes, 0 ) )
	end ) / 60 as HoursEvening,
	sum ( case
		when HolidaysList.Day is not null then 0
		when Vacations.Day is not null then 0
		when SickLeaves.Day is not null then 0
		when Schedules.MinutesNight + ( Schedules.MinutesEvening + ( Schedules.Minutes - Schedules.MinutesEvening - Schedules.MinutesNight - case when Preholidays.Day is null then 0 else 60 end - isnull ( Absences.Minutes, 0 ) + isnull ( UsedBankHours.Minutes, 0 ) ) ) &lt; 0 then
			0
		when Schedules.MinutesNight + ( Schedules.MinutesEvening + ( Schedules.Minutes - Schedules.MinutesEvening - Schedules.MinutesNight - case when Preholidays.Day is null then 0 else 60 end  - isnull ( Absences.Minutes, 0 ) + isnull ( UsedBankHours.Minutes, 0 ) ) ) &gt; Schedules.MinutesNight then
			Schedules.MinutesNight
		else
			Schedules.MinutesNight + ( Schedules.MinutesEvening + ( Schedules.Minutes - Schedules.MinutesEvening - Schedules.MinutesNight - case when Preholidays.Day is null then 0 else 60 end - isnull ( Absences.Minutes, 0 ) + isnull ( UsedBankHours.Minutes, 0 ) ) )
	end ) / 60 as HoursNight
into SimpleHours
from Location as Location
	//
	// Calendar
	//
	join Calendar as Calendar
	on Calendar.Day between Location.DateStart and Location.DateEnd
	//
	// Filter by NoTimesheets
	//
	join NoTimesheets as NoTimesheets
	on NoTimesheets.Employee = Location.Employee
	//
	// Schedules
	//
	join InformationRegister.Schedules as Schedules
	on Schedules.Schedule = Location.Schedule
	and Schedules.Day = Calendar.Day
	//
	// Holidays
	//
	left join Holidays as HolidaysList
	on HolidaysList.Schedule = Schedules.Schedule
	and HolidaysList.Division = Location.Department.Division
	and HolidaysList.Day = Schedules.Day
	//
	// Preholidays
	//
	left join Holidays as Preholidays
	on Preholidays.Schedule = Schedules.Schedule
	and Preholidays.Division = Location.Department.Division
	and Preholidays.Preholiday = Schedules.Day
	and Schedules.Minutes &gt; 0
	//
	// Absences
	//
	left join Deviations as Absences
	on Absences.Employee = Location.Employee
	and Absences.Time = value ( Enum.Time.Absence )
	and Absences.Day = Schedules.Day
	and Schedules.Minutes &gt; 0
	//
	// UsedBankHours
	//
	left join Deviations as UsedBankHours
	on UsedBankHours.Employee = Location.Employee
	and UsedBankHours.Time = value ( Enum.Time.BankedUse )
	and UsedBankHours.Day = Schedules.Day
	and Schedules.Minutes &gt; 0
	//
	// Vacations
	//
	left join Vacations as Vacations
	on Vacations.Employee = Location.Employee
	and Vacations.Day = Schedules.Day
	//
	// SickLeaves
	//
	left join SickLeaves as SickLeaves
	on SickLeaves.Employee = Location.Employee
	and SickLeaves.Day = Schedules.Day
group by Location.Employee, Calendar.Day
index by Employee, Day
;
// Hours
select Hours.Employee as Employee, Hours.Day as Day, sum ( Hours.Minutes ) / 60 as Hours,
	case when sum ( Hours.Minutes ) = 0 then 0 else 1 end as Days, 0 as TimeIndex
into Hours
from InformationRegister.Hours as Hours
	//
	// Filter by Employment
	//
	join Employment as Employment
	on Employment.Employee = Hours.Employee
	and Hours.Day between Employment.DateStart and Employment.DateEnd
where Hours.Time in (
	value ( Enum.Time.Billable ),
	value ( Enum.Time.NonBillable ),
	value ( Enum.Time.BankedUse )
	)
group by Hours.Employee, Hours.Day
union all
select SimpleHours.Employee, SimpleHours.Day, SimpleHours.Hours, 1, 0
from SimpleHours as SimpleHours
where SimpleHours.Hours &gt; 0
union all
select SimpleHours.Employee, SimpleHours.Day, SimpleHours.HoursEvening, case when SimpleHours.HoursEvening = 0 then 0 else 1 end, 1
from SimpleHours as SimpleHours
where SimpleHours.HoursEvening &gt; 0
union all
select SimpleHours.Employee, SimpleHours.Day, SimpleHours.HoursNight, case when SimpleHours.HoursNight = 0 then 0 else 1 end, 2
from SimpleHours as SimpleHours
where SimpleHours.HoursNight &gt; 0
index by Employee, Day
;
// Standard
select Location.Employee as Employee, Location.Department as Department, Location.Position as Position,
	Location.Time as Time, Location.Day as Day, Location.Hours as Hours, Location.Days as Days
into Standard
from (
	select Location.Employee as Employee, Location.Department as Department, Location.Position as Position,
		GeneralHours.Day as Day,
		case when GeneralHours.TimeIndex = 0 then value ( Enum.Time.Billable ) 
			when GeneralHours.TimeIndex = 1 then value ( Enum.Time.Evening ) 
			else value ( Enum.Time.Night ) 
		end as Time,
		sum ( GeneralHours.Hours ) as Hours, sum ( GeneralHours.Days ) as Days
	from Location as Location
		//
		// Compensations
		//
		join Compensations as Compensations
		on Compensations.Employee = Location.Employee
		//
		// GeneralHours
		//
		left join Hours as GeneralHours
		on GeneralHours.Employee = Location.Employee
		and GeneralHours.Day between
			case when Location.DateStart &gt; Compensations.DateStart then Location.DateStart else Compensations.DateStart end
			and
			case when Location.DateEnd &gt; Compensations.DateEnd then Compensations.DateEnd else Location.DateEnd end
	group by Location.Employee, Location.Department, Location.Position,	GeneralHours.Day,
		case when GeneralHours.TimeIndex = 0 then value ( Enum.Time.Billable ) 
			when GeneralHours.TimeIndex = 1 then value ( Enum.Time.Evening ) 
			else value ( Enum.Time.Night ) 
		end
	) as Location
index by Employee
;
// AllTime
select AllTime.Employee as Employee, AllTime.Department as Department, AllTime.Position as Position, AllTime.Day as Day,
	AllTime.Time as Time, max ( AllTime.WholeDay ) as WholeDay, sum ( AllTime.Hours ) as Hours, sum ( AllTime.Days ) as Days
into AllTime
from (
	select Standard.Employee as Employee, Standard.Department as Department, Standard.Position as Position,
		Standard.Hours as Hours, Standard.Days as Days,	Standard.Day as Day, Standard.Time as Time, null as WholeDay
	from Standard as Standard
	union all
	select Vacations.Employee, Vacations.Department, Vacations.Position, Vacations.Hours, Vacations.Days, Vacations.Day,
		Vacations.Time, Vacations.WholeDay
	from (
		select Location.Employee as Employee, Location.Department as Department, Location.Position as Position,
			sum ( Vacations.Minutes ) / 60 as Hours, count ( Vacations.Minutes ) as Days,
			Vacations.Day as Day, Vacations.Time as Time, max ( Vacations.WholeDay ) as WholeDay
		from ScheduledLocation as Location
			//
			// Vacations
			//
			join Vacations as Vacations
			on Vacations.Employee = Location.Employee
			and Vacations.Day between Location.DateStart and Location.DateEnd
            and Vacations.Day is not null
		group by Location.Employee, Location.Department, Location.Position, Vacations.Day, Vacations.Time
		) as Vacations
	union all
	select Location.Employee, Location.Department, Location.Position, 
		sum ( SickLeaves.Minutes ) / 60, count ( SickLeaves.Minutes ), SickLeaves.Day,
		value ( Enum.Time.Sickness ), max ( SickLeaves.WholeDay )
	from ScheduledLocation as Location
		//
		// SickLeaves
		//
		join SickLeaves as SickLeaves
		on SickLeaves.Employee = Location.Employee
		and SickLeaves.Day between Location.DateStart and Location.DateEnd
		//
		// Compensations
		//
		join Compensations as Compensations
		on Compensations.Employee = Location.Employee
		and ( Compensations.DateStart between Location.DateStart and Location.DateEnd
			or Compensations.DateEnd between Location.DateStart and Location.DateEnd )
	where Compensations.Compensation.Method in ( value ( Enum.Calculations.HourlyRate ), value ( Enum.Calculations.MonthlyRate ) )
	group by Location.Employee, Location.Department, Location.Position, SickLeaves.Day
	union all
	select StandardPeriods.Employee, StandardPeriods.Department, StandardPeriods.Position,
		sum ( Deviations.Minutes ) / 60, sum ( case when Deviations.Minutes = 0 then 0 else 1 end ),
		Deviations.Day, Deviations.Time, null
	from (
		select Location.Employee as Employee, Location.Department as Department, Location.Position as Position,
			case when Location.DateStart &gt; Compensations.DateStart then Location.DateStart else Compensations.DateStart end as DateStart,
			case when Location.DateEnd &gt; Compensations.DateEnd then Compensations.DateEnd else Location.DateEnd end as DateEnd
		from Location as Location
			//
			// Compensations
			//
			join Compensations as Compensations
			on Compensations.Employee = Location.Employee
			and Compensations.Compensation.Method in ( value ( Enum.Calculations.HourlyRate ), value ( Enum.Calculations.MonthlyRate ) )
		group by Location.Employee, Location.Department, Location.Position,
			case when Location.DateStart &gt; Compensations.DateStart then Location.DateStart else Compensations.DateStart end,
			case when Location.DateEnd &gt; Compensations.DateEnd then Compensations.DateEnd else Location.DateEnd end
	) as StandardPeriods
		//
		// Deviations
		//
		join Deviations as Deviations
		on Deviations.Employee = StandardPeriods.Employee
		and Deviations.Day between StandardPeriods.DateStart and StandardPeriods.DateEnd
	group by StandardPeriods.Employee, StandardPeriods.Department, StandardPeriods.Position,
		Deviations.Day, Deviations.Time
	) as AllTime
group by AllTime.Employee, AllTime.Department, AllTime.Position, AllTime.Day, AllTime.Time
having sum ( AllTime.Hours ) &gt; 0 or sum ( AllTime.Days ) &gt; 0
;
// Main selection
select Calendar.Employee as Employee, Calendar.Department as Department, Calendar.Position as Position,
	Calendar.Time as Time, Calendar.Day as Day, Spans.Day as Span,
	isnull ( AllTime.Hours, 0 ) as Hours, isnull ( AllTime.Days, 0 ) as Days, isnull ( AllTime.WholeDay, false ) as WholeDay
{select Employee.*, Department.*, Position.*, Day, Time, Hours, Days, Span, WholeDay}
from (
	select distinct AllTime.Employee as Employee, AllTime.Department as Department, AllTime.Position as Position,
		AllTime.Time as Time, Calendar.Day as Day
	from AllTime as AllTime
		//
		// Calendar
		//
		left join Calendar as Calendar
		on true
	) as Calendar
	//
	// AllTime
	//
	left join AllTime as AllTime
	on Calendar.Employee = AllTime.Employee
	and Calendar.Department = AllTime.Department
	and Calendar.Position = AllTime.Position
	and Calendar.Day = AllTime.Day
	and Calendar.Time = AllTime.Time
	//
	// Spans
	//
	left join (
		select AllTime.Employee as Employee, AllTime.Department as Department, AllTime.Position as Position,
			min ( AllTime.Day ) as Day
		from AllTime as AllTime
		group by AllTime.Employee, AllTime.Department, AllTime.Position
	) as Spans
	on Spans.Employee = Calendar.Employee
	and Spans.Department = Calendar.Department
	and Spans.Position = Calendar.Position
{where Calendar.Time as Time, isnull ( AllTime.WholeDay, false ) as WholeDay}</query>
		<autoFillFields>false</autoFillFields>
	</dataSet>
	<dataSet xsi:type="DataSetQuery">
		<name>Signatures</name>
		<field xsi:type="DataSetFieldField">
			<dataPath>Name</dataPath>
			<field>Name</field>
			<title xsi:type="v8:LocalStringType">
				<v8:item>
					<v8:lang>en</v8:lang>
					<v8:content>Name</v8:content>
				</v8:item>
			</title>
		</field>
		<field xsi:type="DataSetFieldField">
			<dataPath>Director</dataPath>
			<field>Director</field>
			<title xsi:type="v8:LocalStringType">
				<v8:item>
					<v8:lang>en</v8:lang>
					<v8:content>Director</v8:content>
				</v8:item>
			</title>
		</field>
		<field xsi:type="DataSetFieldField">
			<dataPath>Accountant</dataPath>
			<field>Accountant</field>
			<title xsi:type="v8:LocalStringType">
				<v8:item>
					<v8:lang>en</v8:lang>
					<v8:content>Accountant</v8:content>
				</v8:item>
			</title>
		</field>
		<field xsi:type="DataSetFieldField">
			<dataPath>Company</dataPath>
			<field>Company</field>
			<title xsi:type="v8:LocalStringType">
				<v8:item>
					<v8:lang>en</v8:lang>
					<v8:content>Company</v8:content>
				</v8:item>
			</title>
		</field>
		<dataSource>DataSource1</dataSource>
		<query>// Company
select top 1 Companies.Ref as Ref
into Company
from Catalog.Companies as Companies
where not Companies.DeletionMark
{where Companies.Ref.* as Company}
;
// Main selection
select  Accountant.Name as Accountant, Director.Name as Director
{select Accountant, Director}
from Company as Company
	//
	// Accountant
	//
	left join (
		select top 1 Roles.User.Employee.Individual.Description as Name
		from Document.Roles as Roles
		where Roles.Role = value ( Enum.Roles.AccountantChief )
		and not Roles.DeletionMark
		and Roles.Action = value ( Enum.AssignRoles.Assign )
		and Roles.Company in ( select Ref from Company )
		order by Roles.Date desc
			) as Accountant
	on true
	//
	// Director
	//
	left join (
		select top 1 Roles.User.Employee.Individual.Description as Name
		from Document.Roles as Roles
		where Roles.Role = value ( Enum.Roles.GeneralManager )
		and not Roles.DeletionMark
		and Roles.Action = value ( Enum.AssignRoles.Assign )
		and Roles.Company in ( select Ref from Company )
		order by Roles.Date desc
			) as Director
	on true
</query>
	</dataSet>
	<calculatedField>
		<dataPath>TotalRow</dataPath>
		<expression>""</expression>
	</calculatedField>
	<calculatedField>
		<dataPath>Line</dataPath>
		<expression>0</expression>
		<title xsi:type="v8:LocalStringType">
			<v8:item>
				<v8:lang>en</v8:lang>
				<v8:content>N</v8:content>
			</v8:item>
			<v8:item>
				<v8:lang>ru</v8:lang>
				<v8:content>№</v8:content>
			</v8:item>
			<v8:item>
				<v8:lang>ro</v8:lang>
				<v8:content>№</v8:content>
			</v8:item>
		</title>
	</calculatedField>
	<totalField>
		<dataPath>Hours</dataPath>
		<expression>sum ( Hours )</expression>
	</totalField>
	<totalField>
		<dataPath>Hours</dataPath>
		<expression>sum ( case when Time in ( value ( Enum.Time.Evening ), value ( Enum.Time.Night )  )  then 0 else Hours end )</expression>
		<group>Overall</group>
	</totalField>
	<totalField>
		<dataPath>Days</dataPath>
		<expression>Sum(Days)</expression>
	</totalField>
	<totalField>
		<dataPath>Days</dataPath>
		<expression>sum ( case when Time in ( value ( Enum.Time.Evening ), value ( Enum.Time.Night )  )  then 0 else Days end )</expression>
		<group>Overall</group>
	</totalField>
	<totalField>
		<dataPath>WholeDay</dataPath>
		<expression>WholeDay</expression>
	</totalField>
	<parameter>
		<name>Period</name>
		<title xsi:type="v8:LocalStringType">
			<v8:item>
				<v8:lang>en</v8:lang>
				<v8:content>Period</v8:content>
			</v8:item>
			<v8:item>
				<v8:lang>ru</v8:lang>
				<v8:content>Период</v8:content>
			</v8:item>
			<v8:item>
				<v8:lang>ro</v8:lang>
				<v8:content>Perioadă</v8:content>
			</v8:item>
		</title>
		<valueType>
			<v8:Type>v8:StandardPeriod</v8:Type>
		</valueType>
		<value xsi:type="v8:StandardPeriod">
			<v8:variant xsi:type="v8:StandardPeriodVariant">ThisMonth</v8:variant>
		</value>
		<useRestriction>false</useRestriction>
		<denyIncompleteValues>true</denyIncompleteValues>
		<use>Always</use>
	</parameter>
	<parameter>
		<name>DateEnd</name>
		<title xsi:type="xs:string">Date end</title>
		<valueType>
			<v8:Type>xs:dateTime</v8:Type>
			<v8:DateQualifiers>
				<v8:DateFractions>DateTime</v8:DateFractions>
			</v8:DateQualifiers>
		</valueType>
		<value xsi:type="xs:dateTime">0001-01-01T00:00:00</value>
		<useRestriction>true</useRestriction>
		<expression>&amp;Period.EndDate</expression>
		<availableAsField>false</availableAsField>
		<use>Always</use>
	</parameter>
	<parameter>
		<name>DateStart</name>
		<title xsi:type="xs:string">Date start</title>
		<valueType>
			<v8:Type>xs:dateTime</v8:Type>
			<v8:DateQualifiers>
				<v8:DateFractions>DateTime</v8:DateFractions>
			</v8:DateQualifiers>
		</valueType>
		<value xsi:type="xs:dateTime">0001-01-01T00:00:00</value>
		<useRestriction>true</useRestriction>
		<expression>&amp;Period.StartDate</expression>
		<availableAsField>false</availableAsField>
		<use>Always</use>
	</parameter>
	<parameter>
		<name>Billable</name>
		<title xsi:type="xs:string">Billable</title>
		<valueType>
			<v8:Type>xs:string</v8:Type>
			<v8:StringQualifiers>
				<v8:Length>0</v8:Length>
				<v8:AllowedLength>Variable</v8:AllowedLength>
			</v8:StringQualifiers>
		</valueType>
		<value xsi:type="xs:string"/>
		<useRestriction>true</useRestriction>
		<expression>NStr ( "en = 'S'; ru = 'Я'; ro = 'S'" )</expression>
		<availableAsField>false</availableAsField>
	</parameter>
	<parameter>
		<name>Holiday</name>
		<title xsi:type="xs:string">Holiday</title>
		<valueType>
			<v8:Type>xs:string</v8:Type>
			<v8:StringQualifiers>
				<v8:Length>0</v8:Length>
				<v8:AllowedLength>Variable</v8:AllowedLength>
			</v8:StringQualifiers>
		</valueType>
		<value xsi:type="xs:string"/>
		<useRestriction>true</useRestriction>
		<expression>NStr ( "en = 'H'; ru = 'РП'; ro = 'Sn'" )</expression>
		<availableAsField>false</availableAsField>
	</parameter>
	<parameter>
		<name>Vacation</name>
		<title xsi:type="xs:string">Vacation</title>
		<valueType>
			<v8:Type>xs:string</v8:Type>
			<v8:StringQualifiers>
				<v8:Length>0</v8:Length>
				<v8:AllowedLength>Variable</v8:AllowedLength>
			</v8:StringQualifiers>
		</valueType>
		<value xsi:type="xs:string"/>
		<useRestriction>true</useRestriction>
		<expression>NStr ( "en = 'V'; ru = 'ОТ'; ro = 'C'" )</expression>
		<availableAsField>false</availableAsField>
	</parameter>
	<parameter>
		<name>ExtendedVacation</name>
		<title xsi:type="xs:string">Extended vacation</title>
		<valueType>
			<v8:Type>xs:string</v8:Type>
			<v8:StringQualifiers>
				<v8:Length>0</v8:Length>
				<v8:AllowedLength>Variable</v8:AllowedLength>
			</v8:StringQualifiers>
		</valueType>
		<value xsi:type="xs:string"/>
		<useRestriction>true</useRestriction>
		<expression>NStr ( "en = 'EV'; ru = 'ОД'; ro = 'Ce'" )</expression>
		<availableAsField>false</availableAsField>
	</parameter>
	<parameter>
		<name>Sickness</name>
		<title xsi:type="xs:string">Sickness</title>
		<valueType>
			<v8:Type>xs:string</v8:Type>
			<v8:StringQualifiers>
				<v8:Length>0</v8:Length>
				<v8:AllowedLength>Variable</v8:AllowedLength>
			</v8:StringQualifiers>
		</valueType>
		<value xsi:type="xs:string"/>
		<useRestriction>true</useRestriction>
		<expression>NStr ( "en = 'Sn'; ru = 'Б'; ro = 'Cm'" )</expression>
		<availableAsField>false</availableAsField>
	</parameter>
	<parameter>
		<name>Banked</name>
		<title xsi:type="xs:string">Banked</title>
		<valueType>
			<v8:Type>xs:string</v8:Type>
			<v8:StringQualifiers>
				<v8:Length>0</v8:Length>
				<v8:AllowedLength>Variable</v8:AllowedLength>
			</v8:StringQualifiers>
		</valueType>
		<value xsi:type="xs:string"/>
		<useRestriction>true</useRestriction>
		<expression>NStr ( "en = 'B+'; ru = 'Р+'; ro = 'B+'" )</expression>
		<availableAsField>false</availableAsField>
	</parameter>
	<parameter>
		<name>BankedUse</name>
		<title xsi:type="xs:string">Banked use</title>
		<valueType>
			<v8:Type>xs:string</v8:Type>
			<v8:StringQualifiers>
				<v8:Length>0</v8:Length>
				<v8:AllowedLength>Variable</v8:AllowedLength>
			</v8:StringQualifiers>
		</valueType>
		<value xsi:type="xs:string"/>
		<useRestriction>true</useRestriction>
		<expression>NStr ( "en = 'B-'; ru = 'Р-'; ro = 'B-'" )</expression>
		<availableAsField>false</availableAsField>
	</parameter>
	<parameter>
		<name>Overtime</name>
		<title xsi:type="xs:string">Overtime</title>
		<valueType>
			<v8:Type>xs:string</v8:Type>
			<v8:StringQualifiers>
				<v8:Length>0</v8:Length>
				<v8:AllowedLength>Variable</v8:AllowedLength>
			</v8:StringQualifiers>
		</valueType>
		<value xsi:type="xs:string"/>
		<useRestriction>true</useRestriction>
		<expression>NStr ( "en = 'O'; ru = 'С'; ro = 'Os'" )</expression>
		<availableAsField>false</availableAsField>
	</parameter>
	<parameter>
		<name>DayOff</name>
		<title xsi:type="xs:string">Day off</title>
		<valueType>
			<v8:Type>xs:string</v8:Type>
			<v8:StringQualifiers>
				<v8:Length>0</v8:Length>
				<v8:AllowedLength>Variable</v8:AllowedLength>
			</v8:StringQualifiers>
		</valueType>
		<value xsi:type="xs:string"/>
		<useRestriction>true</useRestriction>
		<expression>NStr ( "en = 'DO'; ru = 'РП'; ro = 'Ls'" )</expression>
		<availableAsField>false</availableAsField>
	</parameter>
	<parameter>
		<name>Evening</name>
		<title xsi:type="xs:string">Evening</title>
		<valueType>
			<v8:Type>xs:string</v8:Type>
			<v8:StringQualifiers>
				<v8:Length>0</v8:Length>
				<v8:AllowedLength>Variable</v8:AllowedLength>
			</v8:StringQualifiers>
		</valueType>
		<value xsi:type="xs:string"/>
		<useRestriction>true</useRestriction>
		<expression>NStr ( "en = 'E'; ru = 'ВЕ'; ro = 'Se'" )</expression>
		<availableAsField>false</availableAsField>
	</parameter>
	<parameter>
		<name>Night</name>
		<title xsi:type="xs:string">Night</title>
		<valueType>
			<v8:Type>xs:string</v8:Type>
			<v8:StringQualifiers>
				<v8:Length>0</v8:Length>
				<v8:AllowedLength>Variable</v8:AllowedLength>
			</v8:StringQualifiers>
		</valueType>
		<value xsi:type="xs:string"/>
		<useRestriction>true</useRestriction>
		<expression>NStr ( "en = 'N'; ru = 'Н'; ro = 'N'" )</expression>
		<availableAsField>false</availableAsField>
	</parameter>
	<parameter>
		<name>Absence</name>
		<title xsi:type="xs:string">Absence</title>
		<valueType>
			<v8:Type>xs:string</v8:Type>
			<v8:StringQualifiers>
				<v8:Length>0</v8:Length>
				<v8:AllowedLength>Variable</v8:AllowedLength>
			</v8:StringQualifiers>
		</valueType>
		<value xsi:type="xs:string"/>
		<useRestriction>true</useRestriction>
		<expression>NStr ( "en = 'A'; ru = 'ПР'; ro = 'A'" )</expression>
		<availableAsField>false</availableAsField>
	</parameter>
	<template>
		<name>Template2</name>
		<template xmlns:dcsat="http://v8.1c.ru/8.1/data-composition-system/area-template" xsi:type="dcsat:AreaTemplate">
			<dcsat:item xsi:type="dcsat:TableRow">
				<dcsat:tableCell>
					<dcsat:item xsi:type="dcsat:Field">
						<dcsat:value xsi:type="v8:LocalStringType">
							<v8:item>
								<v8:lang>en</v8:lang>
								<v8:content>###</v8:content>
							</v8:item>
							<v8:item>
								<v8:lang>ro</v8:lang>
								<v8:content>###</v8:content>
							</v8:item>
							<v8:item>
								<v8:lang>ru</v8:lang>
								<v8:content>###</v8:content>
							</v8:item>
						</dcsat:value>
						<dcsat:appearance>
							<dcscor:item>
								<dcscor:parameter>Format</dcscor:parameter>
								<dcscor:value xsi:type="v8:LocalStringType">
									<v8:item>
										<v8:lang>en</v8:lang>
										<v8:content>DF=MM</v8:content>
									</v8:item>
									<v8:item>
										<v8:lang>ro</v8:lang>
										<v8:content>DF=MM</v8:content>
									</v8:item>
									<v8:item>
										<v8:lang>ru</v8:lang>
										<v8:content>DF=MM</v8:content>
									</v8:item>
								</dcscor:value>
							</dcscor:item>
						</dcsat:appearance>
					</dcsat:item>
					<dcsat:item xsi:type="dcsat:Field">
						<dcsat:value xsi:type="dcscor:Parameter">Day</dcsat:value>
						<dcsat:appearance>
							<dcscor:item>
								<dcscor:parameter>Format</dcscor:parameter>
								<dcscor:value xsi:type="v8:LocalStringType">
									<v8:item>
										<v8:lang>en</v8:lang>
										<v8:content>DF=MM</v8:content>
									</v8:item>
									<v8:item>
										<v8:lang>ro</v8:lang>
										<v8:content>DF=MM</v8:content>
									</v8:item>
									<v8:item>
										<v8:lang>ru</v8:lang>
										<v8:content>DF=MM</v8:content>
									</v8:item>
								</dcscor:value>
							</dcscor:item>
						</dcsat:appearance>
					</dcsat:item>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>HorizontalAlign</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:HorizontalAlign">Center</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
			</dcsat:item>
			<dcsat:item xsi:type="dcsat:TableRow">
				<dcsat:tableCell>
					<dcsat:item xsi:type="dcsat:Field">
						<dcsat:value xsi:type="dcscor:Parameter">Day</dcsat:value>
						<dcsat:appearance>
							<dcscor:item>
								<dcscor:parameter>Format</dcscor:parameter>
								<dcscor:value xsi:type="v8:LocalStringType">
									<v8:item>
										<v8:lang>en</v8:lang>
										<v8:content>DF=d</v8:content>
									</v8:item>
									<v8:item>
										<v8:lang>ro</v8:lang>
										<v8:content>DF=d</v8:content>
									</v8:item>
									<v8:item>
										<v8:lang>ru</v8:lang>
										<v8:content>DF=d</v8:content>
									</v8:item>
								</dcscor:value>
							</dcscor:item>
						</dcsat:appearance>
					</dcsat:item>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Font</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:Font" faceName="Arial" height="7" bold="false" italic="false" underline="false" strikeout="false" kind="Absolute" scale="100"/>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>HorizontalAlign</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:HorizontalAlign">Center</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
			</dcsat:item>
		</template>
		<parameter xmlns:dcsat="http://v8.1c.ru/8.1/data-composition-system/area-template" xsi:type="dcsat:ExpressionAreaTemplateParameter">
			<dcsat:name>Day</dcsat:name>
			<dcsat:expression>Day</dcsat:expression>
		</parameter>
	</template>
	<template>
		<name>Template3</name>
		<template xmlns:dcsat="http://v8.1c.ru/8.1/data-composition-system/area-template" xsi:type="dcsat:AreaTemplate">
			<dcsat:item xsi:type="dcsat:TableRow">
				<dcsat:tableCell>
					<dcsat:item xsi:type="dcsat:Field">
						<dcsat:value xsi:type="v8:LocalStringType">
							<v8:item>
								<v8:lang>ru</v8:lang>
								<v8:content>Итого</v8:content>
							</v8:item>
							<v8:item>
								<v8:lang>en</v8:lang>
								<v8:content>Total</v8:content>
							</v8:item>
							<v8:item>
								<v8:lang>ro</v8:lang>
								<v8:content>Total</v8:content>
							</v8:item>
						</dcsat:value>
					</dcsat:item>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>HorizontalAlign</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:HorizontalAlign">Center</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>MinWidth</dcscor:parameter>
							<dcscor:value xsi:type="xs:decimal">5.125</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>MaxWidth</dcscor:parameter>
							<dcscor:value xsi:type="xs:decimal">5.125</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>MinWidth</dcscor:parameter>
							<dcscor:value xsi:type="xs:decimal">5.375</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>MaxWidth</dcscor:parameter>
							<dcscor:value xsi:type="xs:decimal">5.375</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>HorizontalMerge</dcscor:parameter>
							<dcscor:value xsi:type="xs:boolean">true</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
			</dcsat:item>
			<dcsat:item xsi:type="dcsat:TableRow">
				<dcsat:tableCell>
					<dcsat:item xsi:type="dcsat:Field">
						<dcsat:value xsi:type="v8:LocalStringType">
							<v8:item>
								<v8:lang>en</v8:lang>
								<v8:content>Hours</v8:content>
							</v8:item>
							<v8:item>
								<v8:lang>ru</v8:lang>
								<v8:content>Часов</v8:content>
							</v8:item>
							<v8:item>
								<v8:lang>ro</v8:lang>
								<v8:content>Ore</v8:content>
							</v8:item>
						</dcsat:value>
					</dcsat:item>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Font</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:Font" faceName="Arial" height="7" bold="false" italic="false" underline="false" strikeout="false" kind="Absolute" scale="100"/>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>HorizontalAlign</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:HorizontalAlign">Center</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>MinWidth</dcscor:parameter>
							<dcscor:value xsi:type="xs:decimal">5.125</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>MaxWidth</dcscor:parameter>
							<dcscor:value xsi:type="xs:decimal">5.125</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:item xsi:type="dcsat:Field">
						<dcsat:value xsi:type="v8:LocalStringType">
							<v8:item>
								<v8:lang>en</v8:lang>
								<v8:content>Days</v8:content>
							</v8:item>
							<v8:item>
								<v8:lang>ru</v8:lang>
								<v8:content>Дней</v8:content>
							</v8:item>
							<v8:item>
								<v8:lang>ro</v8:lang>
								<v8:content>Zile</v8:content>
							</v8:item>
						</dcsat:value>
					</dcsat:item>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Font</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:Font" faceName="Arial" height="7" bold="false" italic="false" underline="false" strikeout="false" kind="Absolute" scale="100"/>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>HorizontalAlign</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:HorizontalAlign">Center</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>MinWidth</dcscor:parameter>
							<dcscor:value xsi:type="xs:decimal">5.375</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>MaxWidth</dcscor:parameter>
							<dcscor:value xsi:type="xs:decimal">5.375</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
			</dcsat:item>
		</template>
	</template>
	<template>
		<name>Template5</name>
		<template xmlns:dcsat="http://v8.1c.ru/8.1/data-composition-system/area-template" xsi:type="dcsat:AreaTemplate">
			<dcsat:item xsi:type="dcsat:TableRow">
				<dcsat:tableCell>
					<dcsat:item xsi:type="dcsat:Field">
						<dcsat:value xsi:type="v8:LocalStringType">
							<v8:item>
								<v8:lang>en</v8:lang>
								<v8:content>#</v8:content>
							</v8:item>
							<v8:item>
								<v8:lang>ru</v8:lang>
								<v8:content>№</v8:content>
							</v8:item>
							<v8:item>
								<v8:lang>ro</v8:lang>
								<v8:content>№</v8:content>
							</v8:item>
						</dcsat:value>
					</dcsat:item>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>BorderColor</dcscor:parameter>
							<dcscor:value xmlns:d8p1="http://v8.1c.ru/8.1/data/ui/style" xsi:type="v8ui:Color">d8p1:ReportLineColor</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>BorderStyle</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:Line" width="0" gap="false">
								<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">None</v8ui:style>
							</dcscor:value>
							<dcscor:item>
								<dcscor:parameter>BorderStyle.Left</dcscor:parameter>
								<dcscor:value xsi:type="v8ui:Line" width="1" gap="false">
									<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">Solid</v8ui:style>
								</dcscor:value>
							</dcscor:item>
							<dcscor:item>
								<dcscor:parameter>BorderStyle.Top</dcscor:parameter>
								<dcscor:value xsi:type="v8ui:Line" width="1" gap="false">
									<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">Solid</v8ui:style>
								</dcscor:value>
							</dcscor:item>
							<dcscor:item>
								<dcscor:parameter>BorderStyle.Right</dcscor:parameter>
								<dcscor:value xsi:type="v8ui:Line" width="1" gap="false">
									<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">Solid</v8ui:style>
								</dcscor:value>
							</dcscor:item>
							<dcscor:item>
								<dcscor:parameter>BorderStyle.Bottom</dcscor:parameter>
								<dcscor:value xsi:type="v8ui:Line" width="1" gap="false">
									<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">Solid</v8ui:style>
								</dcscor:value>
							</dcscor:item>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>HorizontalAlign</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:HorizontalAlign">Center</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>ColumnSizeChangeMode</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:SizeChangeMode">QuickChange</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:item xsi:type="dcsat:Field">
						<dcsat:value xsi:type="v8:LocalStringType">
							<v8:item>
								<v8:lang>en</v8:lang>
								<v8:content>Personnel #</v8:content>
							</v8:item>
							<v8:item>
								<v8:lang>ro</v8:lang>
								<v8:content>Personalul №</v8:content>
							</v8:item>
							<v8:item>
								<v8:lang>ru</v8:lang>
								<v8:content>Таб. номер</v8:content>
							</v8:item>
						</dcsat:value>
					</dcsat:item>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>BorderColor</dcscor:parameter>
							<dcscor:value xmlns:d8p1="http://v8.1c.ru/8.1/data/ui/style" xsi:type="v8ui:Color">d8p1:ReportLineColor</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>BorderStyle</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:Line" width="0" gap="false">
								<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">None</v8ui:style>
							</dcscor:value>
							<dcscor:item>
								<dcscor:parameter>BorderStyle.Left</dcscor:parameter>
								<dcscor:value xsi:type="v8ui:Line" width="1" gap="false">
									<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">Solid</v8ui:style>
								</dcscor:value>
							</dcscor:item>
							<dcscor:item>
								<dcscor:parameter>BorderStyle.Top</dcscor:parameter>
								<dcscor:value xsi:type="v8ui:Line" width="1" gap="false">
									<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">Solid</v8ui:style>
								</dcscor:value>
							</dcscor:item>
							<dcscor:item>
								<dcscor:parameter>BorderStyle.Right</dcscor:parameter>
								<dcscor:value xsi:type="v8ui:Line" width="1" gap="false">
									<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">Solid</v8ui:style>
								</dcscor:value>
							</dcscor:item>
							<dcscor:item>
								<dcscor:parameter>BorderStyle.Bottom</dcscor:parameter>
								<dcscor:value xsi:type="v8ui:Line" width="1" gap="false">
									<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">Solid</v8ui:style>
								</dcscor:value>
							</dcscor:item>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>HorizontalAlign</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:HorizontalAlign">Center</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>ColumnSizeChangeMode</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:SizeChangeMode">QuickChange</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:item xsi:type="dcsat:Field">
						<dcsat:value xsi:type="v8:LocalStringType">
							<v8:item>
								<v8:lang>en</v8:lang>
								<v8:content>Employee</v8:content>
							</v8:item>
							<v8:item>
								<v8:lang>ru</v8:lang>
								<v8:content>Сотрудник</v8:content>
							</v8:item>
							<v8:item>
								<v8:lang>ro</v8:lang>
								<v8:content>Angajat</v8:content>
							</v8:item>
						</dcsat:value>
					</dcsat:item>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>BorderColor</dcscor:parameter>
							<dcscor:value xmlns:d8p1="http://v8.1c.ru/8.1/data/ui/style" xsi:type="v8ui:Color">d8p1:ReportLineColor</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>BorderStyle</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:Line" width="0" gap="false">
								<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">None</v8ui:style>
							</dcscor:value>
							<dcscor:item>
								<dcscor:parameter>BorderStyle.Left</dcscor:parameter>
								<dcscor:value xsi:type="v8ui:Line" width="1" gap="false">
									<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">Solid</v8ui:style>
								</dcscor:value>
							</dcscor:item>
							<dcscor:item>
								<dcscor:parameter>BorderStyle.Top</dcscor:parameter>
								<dcscor:value xsi:type="v8ui:Line" width="1" gap="false">
									<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">Solid</v8ui:style>
								</dcscor:value>
							</dcscor:item>
							<dcscor:item>
								<dcscor:parameter>BorderStyle.Right</dcscor:parameter>
								<dcscor:value xsi:type="v8ui:Line" width="1" gap="false">
									<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">Solid</v8ui:style>
								</dcscor:value>
							</dcscor:item>
							<dcscor:item>
								<dcscor:parameter>BorderStyle.Bottom</dcscor:parameter>
								<dcscor:value xsi:type="v8ui:Line" width="1" gap="false">
									<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">Solid</v8ui:style>
								</dcscor:value>
							</dcscor:item>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>HorizontalAlign</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:HorizontalAlign">Center</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>ColumnSizeChangeMode</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:SizeChangeMode">QuickChange</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:item xsi:type="dcsat:Field">
						<dcsat:value xsi:type="v8:LocalStringType">
							<v8:item>
								<v8:lang>en</v8:lang>
								<v8:content>Position</v8:content>
							</v8:item>
							<v8:item>
								<v8:lang>ru</v8:lang>
								<v8:content>Должность</v8:content>
							</v8:item>
							<v8:item>
								<v8:lang>ro</v8:lang>
								<v8:content>Funcție</v8:content>
							</v8:item>
						</dcsat:value>
					</dcsat:item>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>BorderColor</dcscor:parameter>
							<dcscor:value xmlns:d8p1="http://v8.1c.ru/8.1/data/ui/style" xsi:type="v8ui:Color">d8p1:ReportLineColor</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>BorderStyle</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:Line" width="0" gap="false">
								<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">None</v8ui:style>
							</dcscor:value>
							<dcscor:item>
								<dcscor:parameter>BorderStyle.Left</dcscor:parameter>
								<dcscor:value xsi:type="v8ui:Line" width="1" gap="false">
									<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">Solid</v8ui:style>
								</dcscor:value>
							</dcscor:item>
							<dcscor:item>
								<dcscor:parameter>BorderStyle.Top</dcscor:parameter>
								<dcscor:value xsi:type="v8ui:Line" width="1" gap="false">
									<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">Solid</v8ui:style>
								</dcscor:value>
							</dcscor:item>
							<dcscor:item>
								<dcscor:parameter>BorderStyle.Right</dcscor:parameter>
								<dcscor:value xsi:type="v8ui:Line" width="1" gap="false">
									<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">Solid</v8ui:style>
								</dcscor:value>
							</dcscor:item>
							<dcscor:item>
								<dcscor:parameter>BorderStyle.Bottom</dcscor:parameter>
								<dcscor:value xsi:type="v8ui:Line" width="1" gap="false">
									<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">Solid</v8ui:style>
								</dcscor:value>
							</dcscor:item>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>HorizontalAlign</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:HorizontalAlign">Center</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>ColumnSizeChangeMode</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:SizeChangeMode">QuickChange</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:item xsi:type="dcsat:Field">
						<dcsat:value xsi:type="v8:LocalStringType">
							<v8:item>
								<v8:lang>en</v8:lang>
								<v8:content>Department</v8:content>
							</v8:item>
							<v8:item>
								<v8:lang>ru</v8:lang>
								<v8:content>Подразделение</v8:content>
							</v8:item>
							<v8:item>
								<v8:lang>ro</v8:lang>
								<v8:content>Subdiviziune</v8:content>
							</v8:item>
						</dcsat:value>
					</dcsat:item>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>BorderColor</dcscor:parameter>
							<dcscor:value xmlns:d8p1="http://v8.1c.ru/8.1/data/ui/style" xsi:type="v8ui:Color">d8p1:ReportLineColor</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>BorderStyle</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:Line" width="0" gap="false">
								<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">None</v8ui:style>
							</dcscor:value>
							<dcscor:item>
								<dcscor:parameter>BorderStyle.Left</dcscor:parameter>
								<dcscor:value xsi:type="v8ui:Line" width="1" gap="false">
									<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">Solid</v8ui:style>
								</dcscor:value>
							</dcscor:item>
							<dcscor:item>
								<dcscor:parameter>BorderStyle.Top</dcscor:parameter>
								<dcscor:value xsi:type="v8ui:Line" width="1" gap="false">
									<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">Solid</v8ui:style>
								</dcscor:value>
							</dcscor:item>
							<dcscor:item>
								<dcscor:parameter>BorderStyle.Right</dcscor:parameter>
								<dcscor:value xsi:type="v8ui:Line" width="1" gap="false">
									<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">Solid</v8ui:style>
								</dcscor:value>
							</dcscor:item>
							<dcscor:item>
								<dcscor:parameter>BorderStyle.Bottom</dcscor:parameter>
								<dcscor:value xsi:type="v8ui:Line" width="1" gap="false">
									<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">Solid</v8ui:style>
								</dcscor:value>
							</dcscor:item>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>HorizontalAlign</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:HorizontalAlign">Center</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>ColumnSizeChangeMode</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:SizeChangeMode">QuickChange</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:item xsi:type="dcsat:Field">
						<dcsat:value xsi:type="v8:LocalStringType">
							<v8:item>
								<v8:lang>en</v8:lang>
								<v8:content>Time</v8:content>
							</v8:item>
							<v8:item>
								<v8:lang>ru</v8:lang>
								<v8:content>Время</v8:content>
							</v8:item>
							<v8:item>
								<v8:lang>ro</v8:lang>
								<v8:content>Timp</v8:content>
							</v8:item>
						</dcsat:value>
					</dcsat:item>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>BorderColor</dcscor:parameter>
							<dcscor:value xmlns:d8p1="http://v8.1c.ru/8.1/data/ui/style" xsi:type="v8ui:Color">d8p1:ReportLineColor</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>BorderStyle</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:Line" width="0" gap="false">
								<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">None</v8ui:style>
							</dcscor:value>
							<dcscor:item>
								<dcscor:parameter>BorderStyle.Left</dcscor:parameter>
								<dcscor:value xsi:type="v8ui:Line" width="1" gap="false">
									<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">Solid</v8ui:style>
								</dcscor:value>
							</dcscor:item>
							<dcscor:item>
								<dcscor:parameter>BorderStyle.Top</dcscor:parameter>
								<dcscor:value xsi:type="v8ui:Line" width="1" gap="false">
									<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">Solid</v8ui:style>
								</dcscor:value>
							</dcscor:item>
							<dcscor:item>
								<dcscor:parameter>BorderStyle.Right</dcscor:parameter>
								<dcscor:value xsi:type="v8ui:Line" width="1" gap="false">
									<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">Solid</v8ui:style>
								</dcscor:value>
							</dcscor:item>
							<dcscor:item>
								<dcscor:parameter>BorderStyle.Bottom</dcscor:parameter>
								<dcscor:value xsi:type="v8ui:Line" width="1" gap="false">
									<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">Solid</v8ui:style>
								</dcscor:value>
							</dcscor:item>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>HorizontalAlign</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:HorizontalAlign">Center</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>ColumnSizeChangeMode</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:SizeChangeMode">QuickChange</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
			</dcsat:item>
			<dcsat:item xsi:type="dcsat:TableRow">
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>VerticalMerge</dcscor:parameter>
							<dcscor:value xsi:type="xs:boolean">true</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>VerticalMerge</dcscor:parameter>
							<dcscor:value xsi:type="xs:boolean">true</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>VerticalMerge</dcscor:parameter>
							<dcscor:value xsi:type="xs:boolean">true</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>VerticalMerge</dcscor:parameter>
							<dcscor:value xsi:type="xs:boolean">true</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>VerticalMerge</dcscor:parameter>
							<dcscor:value xsi:type="xs:boolean">true</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>VerticalMerge</dcscor:parameter>
							<dcscor:value xsi:type="xs:boolean">true</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
			</dcsat:item>
		</template>
	</template>
	<template>
		<name>Layout4</name>
		<template xmlns:dcsat="http://v8.1c.ru/8.1/data-composition-system/area-template" xsi:type="dcsat:AreaTemplate">
			<dcsat:item xsi:type="dcsat:TableRow">
				<dcsat:tableCell>
					<dcsat:item xsi:type="dcsat:Field">
						<dcsat:value xsi:type="dcscor:Parameter">Time1</dcsat:value>
					</dcsat:item>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:item xsi:type="dcsat:Field">
						<dcsat:value xsi:type="dcscor:Parameter">Time2</dcsat:value>
					</dcsat:item>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:item xsi:type="dcsat:Field">
						<dcsat:value xsi:type="dcscor:Parameter">Hours</dcsat:value>
					</dcsat:item>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:item xsi:type="dcsat:Field">
						<dcsat:value xsi:type="dcscor:Parameter">Days</dcsat:value>
					</dcsat:item>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
			</dcsat:item>
		</template>
		<parameter xmlns:dcsat="http://v8.1c.ru/8.1/data-composition-system/area-template" xsi:type="dcsat:ExpressionAreaTemplateParameter">
			<dcsat:name>Time1</dcsat:name>
			<dcsat:expression>presentation ( Time )</dcsat:expression>
		</parameter>
		<parameter xmlns:dcsat="http://v8.1c.ru/8.1/data-composition-system/area-template" xsi:type="dcsat:ExpressionAreaTemplateParameter">
			<dcsat:name>Time2</dcsat:name>
			<dcsat:expression>case when Time = value ( Enum.Time.Billable ) then NStr ( "en = 'Standard Hours'; ru = 'Основные часы'" ) else Time end</dcsat:expression>
		</parameter>
		<parameter xmlns:dcsat="http://v8.1c.ru/8.1/data-composition-system/area-template" xsi:type="dcsat:ExpressionAreaTemplateParameter">
			<dcsat:name>Hours</dcsat:name>
			<dcsat:expression>Hours</dcsat:expression>
		</parameter>
		<parameter xmlns:dcsat="http://v8.1c.ru/8.1/data-composition-system/area-template" xsi:type="dcsat:ExpressionAreaTemplateParameter">
			<dcsat:name>Days</dcsat:name>
			<dcsat:expression>Days</dcsat:expression>
		</parameter>
	</template>
	<template>
		<name>Layout5</name>
		<template xmlns:dcsat="http://v8.1c.ru/8.1/data-composition-system/area-template" xsi:type="dcsat:AreaTemplate">
			<dcsat:item xsi:type="dcsat:TableRow">
				<dcsat:tableCell>
					<dcsat:item xsi:type="dcsat:Field">
						<dcsat:value xsi:type="dcscor:Parameter">Hours</dcsat:value>
					</dcsat:item>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:item xsi:type="dcsat:Field">
						<dcsat:value xsi:type="dcscor:Parameter">Days</dcsat:value>
					</dcsat:item>
				</dcsat:tableCell>
			</dcsat:item>
		</template>
		<parameter xmlns:dcsat="http://v8.1c.ru/8.1/data-composition-system/area-template" xsi:type="dcsat:ExpressionAreaTemplateParameter">
			<dcsat:name>Hours</dcsat:name>
			<dcsat:expression>Hours</dcsat:expression>
		</parameter>
		<parameter xmlns:dcsat="http://v8.1c.ru/8.1/data-composition-system/area-template" xsi:type="dcsat:ExpressionAreaTemplateParameter">
			<dcsat:name>Days</dcsat:name>
			<dcsat:expression>Days</dcsat:expression>
		</parameter>
	</template>
	<template>
		<name>Layout6</name>
		<template xmlns:dcsat="http://v8.1c.ru/8.1/data-composition-system/area-template" xsi:type="dcsat:AreaTemplate">
			<dcsat:item xsi:type="dcsat:TableRow">
				<dcsat:tableCell/>
				<dcsat:tableCell/>
				<dcsat:tableCell/>
				<dcsat:tableCell/>
				<dcsat:tableCell/>
				<dcsat:tableCell/>
				<dcsat:tableCell/>
				<dcsat:tableCell/>
				<dcsat:tableCell/>
				<dcsat:tableCell/>
				<dcsat:tableCell/>
			</dcsat:item>
			<dcsat:item xsi:type="dcsat:TableRow">
				<dcsat:tableCell/>
				<dcsat:tableCell/>
				<dcsat:tableCell/>
				<dcsat:tableCell/>
				<dcsat:tableCell/>
				<dcsat:tableCell/>
				<dcsat:tableCell/>
				<dcsat:tableCell/>
				<dcsat:tableCell/>
				<dcsat:tableCell/>
				<dcsat:tableCell/>
			</dcsat:item>
			<dcsat:item xsi:type="dcsat:TableRow">
				<dcsat:tableCell>
					<dcsat:item xsi:type="dcsat:Field">
						<dcsat:value xsi:type="v8:LocalStringType">
							<v8:item>
								<v8:lang>en</v8:lang>
								<v8:content>Director</v8:content>
							</v8:item>
							<v8:item>
								<v8:lang>ru</v8:lang>
								<v8:content>Директор</v8:content>
							</v8:item>
							<v8:item>
								<v8:lang>ro</v8:lang>
								<v8:content>Director</v8:content>
							</v8:item>
						</dcsat:value>
					</dcsat:item>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>BackColor</dcscor:parameter>
							<dcscor:value xmlns:d8p1="http://v8.1c.ru/8.1/data/ui/style" xsi:type="v8ui:Color">d8p1:FieldBackColor</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>Font</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:Font" faceName="Arial" height="8" bold="true" italic="false" underline="false" strikeout="false" kind="Absolute" scale="100"/>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>HorizontalMerge</dcscor:parameter>
							<dcscor:value xsi:type="xs:boolean">true</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>BackColor</dcscor:parameter>
							<dcscor:value xmlns:d8p1="http://v8.1c.ru/8.1/data/ui/style" xsi:type="v8ui:Color">d8p1:FieldBackColor</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>BorderStyle</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:Line" width="0" gap="false">
								<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">None</v8ui:style>
							</dcscor:value>
							<dcscor:item>
								<dcscor:parameter>BorderStyle.Bottom</dcscor:parameter>
								<dcscor:value xsi:type="v8ui:Line" width="1" gap="false">
									<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">Solid</v8ui:style>
								</dcscor:value>
							</dcscor:item>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>HorizontalMerge</dcscor:parameter>
							<dcscor:value xsi:type="xs:boolean">true</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:item xsi:type="dcsat:Field">
						<dcsat:value xsi:type="dcscor:Parameter">Director</dcsat:value>
					</dcsat:item>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>BackColor</dcscor:parameter>
							<dcscor:value xmlns:d8p1="http://v8.1c.ru/8.1/data/ui/style" xsi:type="v8ui:Color">d8p1:FieldBackColor</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>Font</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:Font" faceName="Arial" height="8" bold="true" italic="false" underline="false" strikeout="false" kind="Absolute" scale="100"/>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>HorizontalMerge</dcscor:parameter>
							<dcscor:value xsi:type="xs:boolean">true</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>HorizontalMerge</dcscor:parameter>
							<dcscor:value xsi:type="xs:boolean">true</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>HorizontalMerge</dcscor:parameter>
							<dcscor:value xsi:type="xs:boolean">true</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>HorizontalMerge</dcscor:parameter>
							<dcscor:value xsi:type="xs:boolean">true</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>HorizontalMerge</dcscor:parameter>
							<dcscor:value xsi:type="xs:boolean">true</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>HorizontalMerge</dcscor:parameter>
							<dcscor:value xsi:type="xs:boolean">true</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
			</dcsat:item>
			<dcsat:item xsi:type="dcsat:TableRow">
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
			</dcsat:item>
			<dcsat:item xsi:type="dcsat:TableRow">
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
			</dcsat:item>
			<dcsat:item xsi:type="dcsat:TableRow">
				<dcsat:tableCell>
					<dcsat:item xsi:type="dcsat:Field">
						<dcsat:value xsi:type="v8:LocalStringType">
							<v8:item>
								<v8:lang>en</v8:lang>
								<v8:content>Accountant</v8:content>
							</v8:item>
							<v8:item>
								<v8:lang>ru</v8:lang>
								<v8:content>Гл. бухгалтер</v8:content>
							</v8:item>
							<v8:item>
								<v8:lang>ro</v8:lang>
								<v8:content>Contabil șef</v8:content>
							</v8:item>
						</dcsat:value>
					</dcsat:item>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>BackColor</dcscor:parameter>
							<dcscor:value xmlns:d8p1="http://v8.1c.ru/8.1/data/ui/style" xsi:type="v8ui:Color">d8p1:FieldBackColor</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>Font</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:Font" faceName="Arial" height="8" bold="true" italic="false" underline="false" strikeout="false" kind="Absolute" scale="100"/>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>HorizontalMerge</dcscor:parameter>
							<dcscor:value xsi:type="xs:boolean">true</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>BackColor</dcscor:parameter>
							<dcscor:value xmlns:d8p1="http://v8.1c.ru/8.1/data/ui/style" xsi:type="v8ui:Color">d8p1:FieldBackColor</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>BorderStyle</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:Line" width="0" gap="false">
								<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">None</v8ui:style>
							</dcscor:value>
							<dcscor:item>
								<dcscor:parameter>BorderStyle.Bottom</dcscor:parameter>
								<dcscor:value xsi:type="v8ui:Line" width="1" gap="false">
									<v8ui:style xsi:type="v8ui:SpreadsheetDocumentCellLineType">Solid</v8ui:style>
								</dcscor:value>
							</dcscor:item>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>HorizontalMerge</dcscor:parameter>
							<dcscor:value xsi:type="xs:boolean">true</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:item xsi:type="dcsat:Field">
						<dcsat:value xsi:type="dcscor:Parameter">Accountant</dcsat:value>
					</dcsat:item>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>BackColor</dcscor:parameter>
							<dcscor:value xmlns:d8p1="http://v8.1c.ru/8.1/data/ui/style" xsi:type="v8ui:Color">d8p1:FieldBackColor</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>Font</dcscor:parameter>
							<dcscor:value xsi:type="v8ui:Font" faceName="Arial" height="8" bold="true" italic="false" underline="false" strikeout="false" kind="Absolute" scale="100"/>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>HorizontalMerge</dcscor:parameter>
							<dcscor:value xsi:type="xs:boolean">true</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>HorizontalMerge</dcscor:parameter>
							<dcscor:value xsi:type="xs:boolean">true</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>HorizontalMerge</dcscor:parameter>
							<dcscor:value xsi:type="xs:boolean">true</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>HorizontalMerge</dcscor:parameter>
							<dcscor:value xsi:type="xs:boolean">true</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>HorizontalMerge</dcscor:parameter>
							<dcscor:value xsi:type="xs:boolean">true</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
				<dcsat:tableCell>
					<dcsat:appearance>
						<dcscor:item>
							<dcscor:parameter>Placement</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionTextPlacementType">Wrap</dcscor:value>
						</dcscor:item>
						<dcscor:item>
							<dcscor:parameter>HorizontalMerge</dcscor:parameter>
							<dcscor:value xsi:type="xs:boolean">true</dcscor:value>
						</dcscor:item>
					</dcsat:appearance>
				</dcsat:tableCell>
			</dcsat:item>
		</template>
		<parameter xmlns:dcsat="http://v8.1c.ru/8.1/data-composition-system/area-template" xsi:type="dcsat:ExpressionAreaTemplateParameter">
			<dcsat:name>Director</dcsat:name>
			<dcsat:expression>Director</dcsat:expression>
		</parameter>
		<parameter xmlns:dcsat="http://v8.1c.ru/8.1/data-composition-system/area-template" xsi:type="dcsat:ExpressionAreaTemplateParameter">
			<dcsat:name>Accountant</dcsat:name>
			<dcsat:expression>Accountant</dcsat:expression>
		</parameter>
	</template>
	<groupTemplate>
		<groupName>Day</groupName>
		<templateType>Header</templateType>
		<template>Template2</template>
	</groupTemplate>
	<groupTemplate>
		<groupName>TotalRow</groupName>
		<templateType>Header</templateType>
		<template>Template3</template>
	</groupTemplate>
	<groupTemplate>
		<groupName>Time</groupName>
		<templateType>Header</templateType>
		<template>Layout4</template>
	</groupTemplate>
	<groupTemplate>
		<groupName>Footer</groupName>
		<templateType>Header</templateType>
		<template>Layout6</template>
	</groupTemplate>
	<groupHeaderTemplate>
		<groupName>Row</groupName>
		<templateType>Header</templateType>
		<template>Template5</template>
	</groupHeaderTemplate>
	<totalFieldsTemplate>
		<groupName1>Row</groupName1>
		<templateType1>Header</templateType1>
		<groupName2>TotalRow</groupName2>
		<templateType2>Header</templateType2>
		<template>Layout5</template>
	</totalFieldsTemplate>
	<settingsVariant>
		<dcsset:name>Default</dcsset:name>
		<dcsset:presentation xsi:type="v8:LocalStringType">
			<v8:item>
				<v8:lang>en</v8:lang>
				<v8:content>Default</v8:content>
			</v8:item>
			<v8:item>
				<v8:lang>ru</v8:lang>
				<v8:content>Основной</v8:content>
			</v8:item>
			<v8:item>
				<v8:lang>ro</v8:lang>
				<v8:content>De bază</v8:content>
			</v8:item>
		</dcsset:presentation>
		<dcsset:settings xmlns:style="http://v8.1c.ru/8.1/data/ui/style" xmlns:sys="http://v8.1c.ru/8.1/data/ui/fonts/system" xmlns:web="http://v8.1c.ru/8.1/data/ui/colors/web" xmlns:win="http://v8.1c.ru/8.1/data/ui/colors/windows">
			<dcsset:selection>
				<dcsset:item xsi:type="dcsset:SelectedItemField">
					<dcsset:field>Day</dcsset:field>
				</dcsset:item>
				<dcsset:item xsi:type="dcsset:SelectedItemField">
					<dcsset:field>Days</dcsset:field>
				</dcsset:item>
				<dcsset:item xsi:type="dcsset:SelectedItemField">
					<dcsset:field>Department</dcsset:field>
				</dcsset:item>
				<dcsset:item xsi:type="dcsset:SelectedItemField">
					<dcsset:field>Employee</dcsset:field>
				</dcsset:item>
				<dcsset:item xsi:type="dcsset:SelectedItemField">
					<dcsset:field>Hours</dcsset:field>
				</dcsset:item>
				<dcsset:item xsi:type="dcsset:SelectedItemField">
					<dcsset:field>Position</dcsset:field>
				</dcsset:item>
				<dcsset:item xsi:type="dcsset:SelectedItemField">
					<dcsset:field>Time</dcsset:field>
				</dcsset:item>
				<dcsset:viewMode>Inaccessible</dcsset:viewMode>
			</dcsset:selection>
			<dcsset:filter>
				<dcsset:item xsi:type="dcsset:FilterItemComparison">
					<dcsset:use>false</dcsset:use>
					<dcsset:left xsi:type="dcscor:Field">Employee</dcsset:left>
					<dcsset:comparisonType>Equal</dcsset:comparisonType>
					<dcsset:userSettingID>63baeb94-2f4b-4613-8d4e-3ee7eab2ca45</dcsset:userSettingID>
				</dcsset:item>
				<dcsset:item xsi:type="dcsset:FilterItemComparison">
					<dcsset:use>false</dcsset:use>
					<dcsset:left xsi:type="dcscor:Field">Department</dcsset:left>
					<dcsset:comparisonType>Equal</dcsset:comparisonType>
					<dcsset:viewMode>Normal</dcsset:viewMode>
					<dcsset:userSettingID>e0df65a9-dd1c-4f1e-87bf-c89b56aeb03b</dcsset:userSettingID>
				</dcsset:item>
				<dcsset:item xsi:type="dcsset:FilterItemComparison">
					<dcsset:use>false</dcsset:use>
					<dcsset:left xsi:type="dcscor:Field">Position</dcsset:left>
					<dcsset:comparisonType>Equal</dcsset:comparisonType>
					<dcsset:viewMode>Normal</dcsset:viewMode>
					<dcsset:userSettingID>50384432-386c-425f-9b8c-e4690aade1d8</dcsset:userSettingID>
				</dcsset:item>
				<dcsset:item xsi:type="dcsset:FilterItemComparison">
					<dcsset:use>false</dcsset:use>
					<dcsset:left xsi:type="dcscor:Field">Company</dcsset:left>
					<dcsset:comparisonType>Equal</dcsset:comparisonType>
					<dcsset:viewMode>Normal</dcsset:viewMode>
					<dcsset:userSettingID>09417f32-6a7e-4181-99b1-4a3cc00c303e</dcsset:userSettingID>
				</dcsset:item>
			</dcsset:filter>
			<dcsset:dataParameters>
				<dcscor:item xsi:type="dcsset:SettingsParameterValue">
					<dcscor:parameter>Period</dcscor:parameter>
					<dcscor:value xsi:type="v8:StandardPeriod">
						<v8:variant xsi:type="v8:StandardPeriodVariant">ThisMonth</v8:variant>
					</dcscor:value>
					<dcsset:userSettingID>74642f75-1a1d-4386-a766-50472be592cf</dcsset:userSettingID>
				</dcscor:item>
			</dcsset:dataParameters>
			<dcsset:outputParameters>
				<dcscor:item xsi:type="dcsset:SettingsParameterValue">
					<dcscor:parameter>AppearanceTemplate</dcscor:parameter>
					<dcscor:value xsi:type="xs:string">Reports</dcscor:value>
				</dcscor:item>
				<dcscor:item xsi:type="dcsset:SettingsParameterValue">
					<dcscor:use>false</dcscor:use>
					<dcscor:parameter>TotalsPlacement</dcscor:parameter>
					<dcscor:value xsi:type="dcscor:DataCompositionTotalPlacement">None</dcscor:value>
				</dcscor:item>
				<dcscor:item xsi:type="dcsset:SettingsParameterValue">
					<dcscor:use>false</dcscor:use>
					<dcscor:parameter>GroupPlacement</dcscor:parameter>
					<dcscor:value xsi:type="dcsset:DataCompositionGroupPlacement">None</dcscor:value>
				</dcscor:item>
				<dcscor:item xsi:type="dcsset:SettingsParameterValue">
					<dcscor:parameter>HorizontalOverallPlacement</dcscor:parameter>
					<dcscor:value xsi:type="dcscor:DataCompositionTotalPlacement">None</dcscor:value>
				</dcscor:item>
				<dcscor:item xsi:type="dcsset:SettingsParameterValue">
					<dcscor:parameter>VerticalOverallPlacement</dcscor:parameter>
					<dcscor:value xsi:type="dcscor:DataCompositionTotalPlacement">None</dcscor:value>
				</dcscor:item>
				<dcscor:item xsi:type="dcsset:SettingsParameterValue">
					<dcscor:parameter>Title</dcscor:parameter>
					<dcscor:value xsi:type="v8:LocalStringType">
						<v8:item>
							<v8:lang>en</v8:lang>
							<v8:content>Timesheet</v8:content>
						</v8:item>
						<v8:item>
							<v8:lang>ru</v8:lang>
							<v8:content>Табель учета рабочего времени</v8:content>
						</v8:item>
						<v8:item>
							<v8:lang>ro</v8:lang>
							<v8:content>Foaia de pontaj</v8:content>
						</v8:item>
					</dcscor:value>
				</dcscor:item>
			</dcsset:outputParameters>
			<dcsset:item xsi:type="dcsset:StructureItemTable">
				<dcsset:name>Table</dcsset:name>
				<dcsset:column>
					<dcsset:name>Day</dcsset:name>
					<dcsset:groupItems>
						<dcsset:item xsi:type="dcsset:GroupItemField">
							<dcsset:field>Day</dcsset:field>
							<dcsset:groupType>Items</dcsset:groupType>
							<dcsset:periodAdditionType>None</dcsset:periodAdditionType>
							<dcsset:periodAdditionBegin xsi:type="xs:dateTime">0001-01-01T00:00:00</dcsset:periodAdditionBegin>
							<dcsset:periodAdditionEnd xsi:type="xs:dateTime">0001-01-01T00:00:00</dcsset:periodAdditionEnd>
						</dcsset:item>
					</dcsset:groupItems>
					<dcsset:order>
						<dcsset:item xsi:type="dcsset:OrderItemAuto"/>
					</dcsset:order>
					<dcsset:selection>
						<dcsset:item xsi:type="dcsset:SelectedItemField">
							<dcsset:field>Day</dcsset:field>
						</dcsset:item>
						<dcsset:item xsi:type="dcsset:SelectedItemField">
							<dcsset:field>Hours</dcsset:field>
						</dcsset:item>
					</dcsset:selection>
					<dcsset:outputParameters>
						<dcscor:item xsi:type="dcsset:SettingsParameterValue">
							<dcscor:use>false</dcscor:use>
							<dcscor:parameter>AppearanceTemplate</dcscor:parameter>
							<dcscor:value xsi:type="xs:string">None</dcscor:value>
						</dcscor:item>
					</dcsset:outputParameters>
				</dcsset:column>
				<dcsset:column>
					<dcsset:name>TotalRow</dcsset:name>
					<dcsset:groupItems>
						<dcsset:item xsi:type="dcsset:GroupItemField">
							<dcsset:field>TotalRow</dcsset:field>
							<dcsset:groupType>Items</dcsset:groupType>
							<dcsset:periodAdditionType>None</dcsset:periodAdditionType>
							<dcsset:periodAdditionBegin xsi:type="xs:dateTime">0001-01-01T00:00:00</dcsset:periodAdditionBegin>
							<dcsset:periodAdditionEnd xsi:type="xs:dateTime">0001-01-01T00:00:00</dcsset:periodAdditionEnd>
						</dcsset:item>
					</dcsset:groupItems>
					<dcsset:order>
						<dcsset:item xsi:type="dcsset:OrderItemAuto"/>
					</dcsset:order>
					<dcsset:selection>
						<dcsset:item xsi:type="dcsset:SelectedItemField">
							<dcsset:field>Hours</dcsset:field>
						</dcsset:item>
						<dcsset:item xsi:type="dcsset:SelectedItemField">
							<dcsset:field>Days</dcsset:field>
						</dcsset:item>
					</dcsset:selection>
				</dcsset:column>
				<dcsset:row>
					<dcsset:name>Row</dcsset:name>
					<dcsset:groupItems>
						<dcsset:item xsi:type="dcsset:GroupItemField">
							<dcsset:field>Employee</dcsset:field>
							<dcsset:groupType>Items</dcsset:groupType>
							<dcsset:periodAdditionType>None</dcsset:periodAdditionType>
							<dcsset:periodAdditionBegin xsi:type="xs:dateTime">0001-01-01T00:00:00</dcsset:periodAdditionBegin>
							<dcsset:periodAdditionEnd xsi:type="xs:dateTime">0001-01-01T00:00:00</dcsset:periodAdditionEnd>
						</dcsset:item>
						<dcsset:item xsi:type="dcsset:GroupItemField">
							<dcsset:field>Department</dcsset:field>
							<dcsset:groupType>Items</dcsset:groupType>
							<dcsset:periodAdditionType>None</dcsset:periodAdditionType>
							<dcsset:periodAdditionBegin xsi:type="xs:dateTime">0001-01-01T00:00:00</dcsset:periodAdditionBegin>
							<dcsset:periodAdditionEnd xsi:type="xs:dateTime">0001-01-01T00:00:00</dcsset:periodAdditionEnd>
						</dcsset:item>
						<dcsset:item xsi:type="dcsset:GroupItemField">
							<dcsset:field>Position</dcsset:field>
							<dcsset:groupType>Items</dcsset:groupType>
							<dcsset:periodAdditionType>None</dcsset:periodAdditionType>
							<dcsset:periodAdditionBegin xsi:type="xs:dateTime">0001-01-01T00:00:00</dcsset:periodAdditionBegin>
							<dcsset:periodAdditionEnd xsi:type="xs:dateTime">0001-01-01T00:00:00</dcsset:periodAdditionEnd>
						</dcsset:item>
						<dcsset:item xsi:type="dcsset:GroupItemField">
							<dcsset:field>Time</dcsset:field>
							<dcsset:groupType>Items</dcsset:groupType>
							<dcsset:periodAdditionType>None</dcsset:periodAdditionType>
							<dcsset:periodAdditionBegin xsi:type="xs:dateTime">0001-01-01T00:00:00</dcsset:periodAdditionBegin>
							<dcsset:periodAdditionEnd xsi:type="xs:dateTime">0001-01-01T00:00:00</dcsset:periodAdditionEnd>
						</dcsset:item>
						<dcsset:item xsi:type="dcsset:GroupItemField">
							<dcsset:field>Span</dcsset:field>
							<dcsset:groupType>Items</dcsset:groupType>
							<dcsset:periodAdditionType>None</dcsset:periodAdditionType>
							<dcsset:periodAdditionBegin xsi:type="xs:dateTime">0001-01-01T00:00:00</dcsset:periodAdditionBegin>
							<dcsset:periodAdditionEnd xsi:type="xs:dateTime">0001-01-01T00:00:00</dcsset:periodAdditionEnd>
						</dcsset:item>
					</dcsset:groupItems>
					<dcsset:order>
						<dcsset:item xsi:type="dcsset:OrderItemField">
							<dcsset:field>Employee.Description</dcsset:field>
							<dcsset:orderType>Asc</dcsset:orderType>
						</dcsset:item>
						<dcsset:item xsi:type="dcsset:OrderItemField">
							<dcsset:field>Span</dcsset:field>
							<dcsset:orderType>Asc</dcsset:orderType>
						</dcsset:item>
						<dcsset:item xsi:type="dcsset:OrderItemField">
							<dcsset:field>Department.Description</dcsset:field>
							<dcsset:orderType>Asc</dcsset:orderType>
						</dcsset:item>
						<dcsset:item xsi:type="dcsset:OrderItemField">
							<dcsset:field>Position.Description</dcsset:field>
							<dcsset:orderType>Asc</dcsset:orderType>
						</dcsset:item>
						<dcsset:item xsi:type="dcsset:OrderItemField">
							<dcsset:field>Time</dcsset:field>
							<dcsset:orderType>Asc</dcsset:orderType>
						</dcsset:item>
					</dcsset:order>
					<dcsset:selection>
						<dcsset:item xsi:type="dcsset:SelectedItemField">
							<dcsset:field>Line</dcsset:field>
						</dcsset:item>
						<dcsset:item xsi:type="dcsset:SelectedItemField">
							<dcsset:field>Employee.Code</dcsset:field>
						</dcsset:item>
						<dcsset:item xsi:type="dcsset:SelectedItemField">
							<dcsset:field>Employee</dcsset:field>
						</dcsset:item>
						<dcsset:item xsi:type="dcsset:SelectedItemField">
							<dcsset:field>Position</dcsset:field>
						</dcsset:item>
						<dcsset:item xsi:type="dcsset:SelectedItemField">
							<dcsset:field>Department</dcsset:field>
						</dcsset:item>
						<dcsset:item xsi:type="dcsset:SelectedItemField">
							<dcsset:field>Time</dcsset:field>
						</dcsset:item>
					</dcsset:selection>
					<dcsset:outputParameters>
						<dcscor:item xsi:type="dcsset:SettingsParameterValue">
							<dcscor:use>false</dcscor:use>
							<dcscor:parameter>AppearanceTemplate</dcscor:parameter>
							<dcscor:value xsi:type="xs:string">None</dcscor:value>
						</dcscor:item>
						<dcscor:item xsi:type="dcsset:SettingsParameterValue">
							<dcscor:parameter>AttributePlacement</dcscor:parameter>
							<dcscor:value xsi:type="dcsset:DataCompositionAttributesPlacement">Separately</dcscor:value>
						</dcscor:item>
						<dcscor:item xsi:type="dcsset:SettingsParameterValue">
							<dcscor:parameter>FieldsTitleType</dcscor:parameter>
							<dcscor:value xsi:type="dcscor:DataCompositionFieldsTitleType">Short</dcscor:value>
						</dcscor:item>
					</dcsset:outputParameters>
				</dcsset:row>
				<dcsset:conditionalAppearance>
					<dcsset:item>
						<dcsset:selection>
							<dcsset:item>
								<dcsset:field>Days</dcsset:field>
							</dcsset:item>
							<dcsset:item>
								<dcsset:field>Hours</dcsset:field>
							</dcsset:item>
						</dcsset:selection>
						<dcsset:filter>
							<dcsset:item xsi:type="dcsset:FilterItemComparison">
								<dcsset:left xsi:type="dcscor:Field">Time</dcsset:left>
								<dcsset:comparisonType>InList</dcsset:comparisonType>
								<dcsset:right xsi:type="dcscor:DesignTimeValue">Enum.Time.Vacation</dcsset:right>
								<dcsset:right xsi:type="dcscor:DesignTimeValue">Enum.Time.ExtendedVacation</dcsset:right>
							</dcsset:item>
							<dcsset:item xsi:type="dcsset:FilterItemComparison">
								<dcsset:left xsi:type="dcscor:Field">Days</dcsset:left>
								<dcsset:comparisonType>Greater</dcsset:comparisonType>
								<dcsset:right xsi:type="xs:decimal">0</dcsset:right>
							</dcsset:item>
						</dcsset:filter>
						<dcsset:appearance>
							<dcscor:item xsi:type="dcsset:SettingsParameterValue">
								<dcscor:parameter>BackColor</dcscor:parameter>
								<dcscor:value xsi:type="v8ui:Color">#FFCC00</dcscor:value>
							</dcscor:item>
						</dcsset:appearance>
					</dcsset:item>
					<dcsset:item>
						<dcsset:selection>
							<dcsset:item>
								<dcsset:field>Days</dcsset:field>
							</dcsset:item>
							<dcsset:item>
								<dcsset:field>Hours</dcsset:field>
							</dcsset:item>
						</dcsset:selection>
						<dcsset:filter>
							<dcsset:item xsi:type="dcsset:FilterItemComparison">
								<dcsset:left xsi:type="dcscor:Field">Time</dcsset:left>
								<dcsset:comparisonType>Equal</dcsset:comparisonType>
								<dcsset:right xsi:type="dcscor:DesignTimeValue">Enum.Time.Sickness</dcsset:right>
							</dcsset:item>
							<dcsset:item xsi:type="dcsset:FilterItemComparison">
								<dcsset:left xsi:type="dcscor:Field">Days</dcsset:left>
								<dcsset:comparisonType>Greater</dcsset:comparisonType>
								<dcsset:right xsi:type="xs:decimal">0</dcsset:right>
							</dcsset:item>
						</dcsset:filter>
						<dcsset:appearance>
							<dcscor:item xsi:type="dcsset:SettingsParameterValue">
								<dcscor:parameter>BackColor</dcscor:parameter>
								<dcscor:value xsi:type="v8ui:Color">#008000</dcscor:value>
							</dcscor:item>
							<dcscor:item xsi:type="dcsset:SettingsParameterValue">
								<dcscor:parameter>TextColor</dcscor:parameter>
								<dcscor:value xsi:type="v8ui:Color">#FFFFFF</dcscor:value>
							</dcscor:item>
						</dcsset:appearance>
					</dcsset:item>
					<dcsset:item>
						<dcsset:selection>
							<dcsset:item>
								<dcsset:field>Days</dcsset:field>
							</dcsset:item>
							<dcsset:item>
								<dcsset:field>Hours</dcsset:field>
							</dcsset:item>
						</dcsset:selection>
						<dcsset:filter>
							<dcsset:item xsi:type="dcsset:FilterItemComparison">
								<dcsset:left xsi:type="dcscor:Field">Time</dcsset:left>
								<dcsset:comparisonType>Equal</dcsset:comparisonType>
								<dcsset:right xsi:type="dcscor:DesignTimeValue">Enum.Time.Holiday</dcsset:right>
							</dcsset:item>
							<dcsset:item xsi:type="dcsset:FilterItemComparison">
								<dcsset:left xsi:type="dcscor:Field">Days</dcsset:left>
								<dcsset:comparisonType>Greater</dcsset:comparisonType>
								<dcsset:right xsi:type="xs:decimal">0</dcsset:right>
							</dcsset:item>
						</dcsset:filter>
						<dcsset:appearance>
							<dcscor:item xsi:type="dcsset:SettingsParameterValue">
								<dcscor:parameter>BackColor</dcscor:parameter>
								<dcscor:value xsi:type="v8ui:Color">#FFFF00</dcscor:value>
							</dcscor:item>
							<dcscor:item xsi:type="dcsset:SettingsParameterValue">
								<dcscor:use>false</dcscor:use>
								<dcscor:parameter>TextColor</dcscor:parameter>
								<dcscor:value xsi:type="v8ui:Color">auto</dcscor:value>
							</dcscor:item>
						</dcsset:appearance>
					</dcsset:item>
					<dcsset:item>
						<dcsset:selection>
							<dcsset:item>
								<dcsset:field>Hours</dcsset:field>
							</dcsset:item>
						</dcsset:selection>
						<dcsset:filter>
							<dcsset:item xsi:type="dcsset:FilterItemComparison">
								<dcsset:left xsi:type="dcscor:Field">WholeDay</dcsset:left>
								<dcsset:comparisonType>Equal</dcsset:comparisonType>
								<dcsset:right xsi:type="xs:boolean">true</dcsset:right>
							</dcsset:item>
						</dcsset:filter>
						<dcsset:appearance>
							<dcscor:item xsi:type="dcsset:SettingsParameterValue">
								<dcscor:parameter>Text</dcscor:parameter>
								<dcscor:value xsi:type="dcscor:Field">Time</dcscor:value>
							</dcscor:item>
						</dcsset:appearance>
						<dcsset:useInHierarchicalGroup>DontUse</dcsset:useInHierarchicalGroup>
						<dcsset:useInOverall>DontUse</dcsset:useInOverall>
						<dcsset:useInFieldsHeader>DontUse</dcsset:useInFieldsHeader>
						<dcsset:useInHeader>DontUse</dcsset:useInHeader>
						<dcsset:useInParameters>DontUse</dcsset:useInParameters>
						<dcsset:useInFilter>DontUse</dcsset:useInFilter>
						<dcsset:useInResourceFieldsHeader>DontUse</dcsset:useInResourceFieldsHeader>
						<dcsset:useInOverallHeader>DontUse</dcsset:useInOverallHeader>
						<dcsset:useInOverallResourceFieldsHeader>DontUse</dcsset:useInOverallResourceFieldsHeader>
					</dcsset:item>
				</dcsset:conditionalAppearance>
			</dcsset:item>
			<dcsset:item xsi:type="dcsset:StructureItemGroup">
				<dcsset:name>Time</dcsset:name>
				<dcsset:groupItems>
					<dcsset:item xsi:type="dcsset:GroupItemField">
						<dcsset:field>Time</dcsset:field>
						<dcsset:groupType>Items</dcsset:groupType>
						<dcsset:periodAdditionType>None</dcsset:periodAdditionType>
						<dcsset:periodAdditionBegin xsi:type="xs:dateTime">0001-01-01T00:00:00</dcsset:periodAdditionBegin>
						<dcsset:periodAdditionEnd xsi:type="xs:dateTime">0001-01-01T00:00:00</dcsset:periodAdditionEnd>
					</dcsset:item>
				</dcsset:groupItems>
				<dcsset:order>
					<dcsset:item xsi:type="dcsset:OrderItemAuto"/>
				</dcsset:order>
				<dcsset:selection>
					<dcsset:item xsi:type="dcsset:SelectedItemField">
						<dcsset:field>Time</dcsset:field>
					</dcsset:item>
					<dcsset:item xsi:type="dcsset:SelectedItemField">
						<dcsset:field>Hours</dcsset:field>
					</dcsset:item>
					<dcsset:item xsi:type="dcsset:SelectedItemField">
						<dcsset:field>Days</dcsset:field>
					</dcsset:item>
				</dcsset:selection>
				<dcsset:outputParameters>
					<dcscor:item xsi:type="dcsset:SettingsParameterValue">
						<dcscor:use>false</dcscor:use>
						<dcscor:parameter>Title</dcscor:parameter>
						<dcscor:value xsi:type="v8:LocalStringType">
							<v8:item>
								<v8:lang>en</v8:lang>
								<v8:content>Info</v8:content>
							</v8:item>
							<v8:item>
								<v8:lang>ro</v8:lang>
								<v8:content>Informații</v8:content>
							</v8:item>
							<v8:item>
								<v8:lang>ru</v8:lang>
								<v8:content>Сводка</v8:content>
							</v8:item>
						</dcscor:value>
					</dcscor:item>
				</dcsset:outputParameters>
			</dcsset:item>
			<dcsset:item xsi:type="dcsset:StructureItemGroup">
				<dcsset:name>Footer</dcsset:name>
				<dcsset:order>
					<dcsset:item xsi:type="dcsset:OrderItemAuto"/>
				</dcsset:order>
				<dcsset:selection>
					<dcsset:item xsi:type="dcsset:SelectedItemField">
						<dcsset:field>Accountant</dcsset:field>
					</dcsset:item>
					<dcsset:item xsi:type="dcsset:SelectedItemField">
						<dcsset:field>Director</dcsset:field>
					</dcsset:item>
				</dcsset:selection>
				<dcsset:outputParameters>
					<dcscor:item xsi:type="dcsset:SettingsParameterValue">
						<dcscor:parameter>AppearanceTemplate</dcscor:parameter>
						<dcscor:value xsi:type="xs:string">None</dcscor:value>
					</dcscor:item>
				</dcsset:outputParameters>
			</dcsset:item>
			<dcsset:itemsViewMode>Inaccessible</dcsset:itemsViewMode>
		</dcsset:settings>
	</settingsVariant>
</DataCompositionSchema>