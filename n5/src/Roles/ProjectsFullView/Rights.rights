<?xml version="1.0" encoding="UTF-8"?>
<Rights xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://v8.1c.ru/8.2/roles" xsi:type="Rights">
	<setForNewObjects>false</setForNewObjects>
	<setForAttributesByDefault>false</setForAttributesByDefault>
	<independentRightsOfChildObjects>false</independentRightsOfChildObjects>
	<object>
		<name>Catalog.Projects.TabularSection.ApprovalList.Attribute.User</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.Attribute.UseApprovingProcess</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.Attribute.Email</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.Attribute.Folder</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.Attribute.DateEnd</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.Attribute.Data</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.TabularSection.Tasks</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.Command.Project</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.TabularSection.Tasks.Attribute.Employee</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.TabularSection.Tasks.Attribute.Duration</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.Attribute.ProjectType</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.Attribute.DateStart</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.Attribute.Minutes</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.TabularSection.ApprovalList</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ProjectSuperTags</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.TabularSection.ApprovalList.Attribute.Priority</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.Attribute.Content</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ProjectTags</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.TabularSection.Tasks.Attribute.TimeType</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Tasks.Attribute.Memo</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.Attribute.Memo</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.Attribute.Duration</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>T where T.Owner in ( #Organizations ( "Owner" ) )</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.StandardAttribute.Predefined</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.StandardAttribute.IsFolder</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.StandardAttribute.Owner</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.StandardAttribute.Parent</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.StandardAttribute.Description</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.StandardAttribute.Code</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.TabularSection.Tasks.Attribute.Minutes</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Tasks.StandardAttribute.Predefined</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Tasks.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Tasks.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Tasks.StandardAttribute.IsFolder</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Tasks.StandardAttribute.Owner</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Tasks.StandardAttribute.Parent</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Tasks.StandardAttribute.Description</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Tasks.StandardAttribute.Code</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.Attribute.Completed</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ProjectsAndEmails.Command.Projects</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.Attribute.FolderID</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.Attribute.ObligatoryTasks</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.TabularSection.Tasks.Attribute.Task</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ProjectsAndEmails.Command.Emails</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.TabularSection.Tasks.Attribute.Description</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.Projects.Attribute.Manager</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<restrictionTemplate>
		<name>Organizations</name>
		<condition>// #Parameter(1) - Reference Field

select value ( Catalog.Organizations.EmptyRef )
union all
//
// Customers
//
select #Parameter(1)
where
#if "#Parameter(1)" = "Ref" #then
	IsFolder
#elseif "#Parameter(1)" = "Owner" #then
	cast ( #Parameter(1) as Catalog.Organizations ).IsFolder
#else
	#Parameter(1).IsFolder
#endif
and &amp;UserClass = value ( Enum.Users.StandardUser )
union all
select #Parameter(1)
where &amp;UserClass = value ( Enum.Users.StandardUser )
and
#if "#Parameter(1)" = "Ref" #then
	CustomerType
#elseif "#Parameter(1)" = "Owner" #then
	cast ( #Parameter(1) as Catalog.Organizations ).CustomerType
#else
	#Parameter(1).CustomerType
#endif
	= value ( Enum.CustomerTypes.Chain )
union all
select #Parameter(1)
where &amp;OrganizationAccess = value ( Enum.Access.Undefined )
and &amp;CanViewCustomers
#if "#Parameter(1)" = "Ref" #then
	and Customer
#elseif "#Parameter(1)" = "Owner" #then
	and cast ( #Parameter(1) as Catalog.Organizations ).Customer
#else
	and #Parameter(1).Customer
#endif
union all
select #Parameter(1)
where &amp;OrganizationAccess = value ( Enum.Access.Allow )
and &amp;CanViewCustomers
#if "#Parameter(1)" = "Ref" #then
	and Customer
#elseif "#Parameter(1)" = "Owner" #then
	and cast ( #Parameter(1) as Catalog.Organizations ).Customer
#else
	and #Parameter(1).Customer
#endif
and #Parameter(1) in ( select Organization from Catalog.Users.Organizations where Ref = &amp;User )
union all
select #Parameter(1)
where &amp;OrganizationAccess = value ( Enum.Access.Forbid )
and &amp;CanViewCustomers
#if "#Parameter(1)" = "Ref" #then
	and Customer
#elseif "#Parameter(1)" = "Owner" #then
	and cast ( #Parameter(1) as Catalog.Organizations ).Customer
#else
	and #Parameter(1).Customer
#endif
and #Parameter(1) not in ( select Organization from Catalog.Users.Organizations where Ref = &amp;User )
union all
select #Parameter(1)
where
#if "#Parameter(1)" = "Ref" #then
	Salesman
#elseif "#Parameter(1)" = "Owner" #then
	cast ( #Parameter(1) as Catalog.Organizations ).Salesman
#else
	#Parameter(1).Salesman
#endif
	= &amp;User
union all
select #Parameter(1)
where &amp;OrganizationAccess = value ( Enum.Access.States )
and &amp;CanViewCustomers
#if "#Parameter(1)" = "Ref" #then
	and Customer
#elseif "#Parameter(1)" = "Owner" #then
	and cast ( #Parameter(1) as Catalog.Organizations ).Customer
#else
	and #Parameter(1).Customer
#endif
#if "#Parameter(1)" = "Ref" #then
	and ShippingAddress.State
#elseif "#Parameter(1)" = "Owner" #then
	and cast ( #Parameter(1) as Catalog.Organizations ).ShippingAddress.State
#else
	and #Parameter(1).ShippingAddress.State
#endif
	in ( select State from Catalog.Users.OrganizationsStates where Ref = &amp;User )
union all
select #Parameter(1)
where &amp;OrganizationAccess = value ( Enum.Access.States )
and &amp;CanViewCustomers
#if "#Parameter(1)" = "Ref" #then
	and Customer
#elseif "#Parameter(1)" = "Owner" #then
	and cast ( #Parameter(1) as Catalog.Organizations ).Customer
#else
	and #Parameter(1).Customer
#endif
#if "#Parameter(1)" = "Ref" #then
	and ShippingAddress
#elseif "#Parameter(1)" = "Owner" #then
	and cast ( #Parameter(1) as Catalog.Organizations ).ShippingAddress
#else
	and #Parameter(1).ShippingAddress
#endif
	= value ( Catalog.Addresses.EmptyRef )
union all
//
// Vendors
//
select #Parameter(1)
where &amp;OrganizationAccess = value ( Enum.Access.Undefined )
and &amp;CanViewVendors
#if "#Parameter(1)" = "Ref" #then
	and Vendor
#elseif "#Parameter(1)" = "Owner" #then
	and cast ( #Parameter(1) as Catalog.Organizations ).Vendor
#else
	and #Parameter(1).Vendor
#endif
union all
select #Parameter(1)
where &amp;OrganizationAccess = value ( Enum.Access.Allow )
and &amp;CanViewVendors
#if "#Parameter(1)" = "Ref" #then
	and Vendor
#elseif "#Parameter(1)" = "Owner" #then
	and cast ( #Parameter(1) as Catalog.Organizations ).Vendor
#else
	and #Parameter(1).Vendor
#endif
and #Parameter(1) in ( select Organization from Catalog.Users.Organizations where Ref = &amp;User )
union all
select #Parameter(1)
where &amp;OrganizationAccess = value ( Enum.Access.Forbid )
and &amp;CanViewVendors
#if "#Parameter(1)" = "Ref" #then
	and Vendor
#elseif "#Parameter(1)" = "Owner" #then
	and cast ( #Parameter(1) as Catalog.Organizations ).Vendor
#else
	and #Parameter(1).Vendor
#endif
and #Parameter(1) not in ( select Organization from Catalog.Users.Organizations where Ref = &amp;User )
union all
select #Parameter(1)
where
#if "#Parameter(1)" = "Ref" #then
	Responsible
#elseif "#Parameter(1)" = "Owner" #then
	cast ( #Parameter(1) as Catalog.Organizations ).Responsible
#else
	#Parameter(1).Responsible
#endif
	= &amp;User
union all
select #Parameter(1)
where &amp;OrganizationAccess = value ( Enum.Access.States )
and &amp;CanViewVendors
#if "#Parameter(1)" = "Ref" #then
	and Vendor
#elseif "#Parameter(1)" = "Owner" #then
	and cast ( #Parameter(1) as Catalog.Organizations ).Vendor
#else
	and #Parameter(1).Vendor
#endif
#if "#Parameter(1)" = "Ref" #then
	and ShippingAddress.State
#elseif "#Parameter(1)" = "Owner" #then
	and cast ( #Parameter(1) as Catalog.Organizations ).ShippingAddress.State
#else
	and #Parameter(1).ShippingAddress.State
#endif
	in ( select State from Catalog.Users.OrganizationsStates where Ref = &amp;User )
union all
select #Parameter(1)
where &amp;OrganizationAccess = value ( Enum.Access.States )
and &amp;CanViewVendors
#if "#Parameter(1)" = "Ref" #then
	and Vendor
#elseif "#Parameter(1)" = "Owner" #then
	and cast ( #Parameter(1) as Catalog.Organizations ).Vendor
#else
	and #Parameter(1).Vendor
#endif
#if "#Parameter(1)" = "Ref" #then
	and ShippingAddress
#elseif "#Parameter(1)" = "Owner" #then
	and cast ( #Parameter(1) as Catalog.Organizations ).ShippingAddress
#else
	and #Parameter(1).ShippingAddress
#endif
	= value ( Catalog.Addresses.EmptyRef )
</condition>
	</restrictionTemplate>
</Rights>
